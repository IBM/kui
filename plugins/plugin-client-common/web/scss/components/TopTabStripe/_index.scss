/*
 * Copyright 2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@import 'mixins';
@import 'carbon-components/scss/components/ui-shell/_header.scss';
@import 'carbon-components/scss/components/ui-shell/_ui-shell.scss';

@include TopTabStripe {
  --tab-shadow: inset 0 -3px 0 0;

  height: 2.75rem;
  background-color: var(--color-stripe-01);
  border-bottom: none;
  transition-property: background-color;
  position: unset;

  .bx--header__action {
    .bx--header__action--active {
      border-left-color: var(--color-table-border2);
      border-bottom-color: var(--color-table-border1);
    }
    &:focus {
      border-color: var(--color-base04);
    }
  }

  .bx--header__menu-trigger {
    &:hover {
      fill: var(--color-text-01);
      background: var(--color-ui-04);
    }
    & > svg {
      fill: var(--color-text-02);
    }
  }

  @include HeaderName {
    font-size: inherit;
    position: relative;
    border: none;
    margin-right: 1em;

    /* vertical separator */
    &:after {
      box-shadow: 1px 0 0px 0 var(--color-table-border3);
      content: '';
      height: 60%;
      width: 1px;
      right: 1px;
      position: absolute;
    }
  }

  .bx--header__name {
    &,
    &:hover {
      color: var(--color-text-02);
    }
  }

  .bx--header__nav {
    padding-left: 0;

    /* this rule is important: otherwise the default carbon components
   styling uses media selectors to hide our Tab buttons for narrower
   windows */
    display: block;

    &:before {
      display: none;
    }
  }

  @include Tab {
    counter-increment: tab-index;
    display: flex;
    align-items: center;
    position: relative;
    min-width: 12em;

    a:not([data-custom-label]) {
      max-width: 20em;
    }

    box-shadow: var(--tab-shadow) var(--color-table-border3);
    &:hover {
      box-shadow: var(--tab-shadow) var(--color-table-border2);
    }
    &.kui--tab--active {
      box-shadow: var(--tab-shadow) var(--active-tab-color);
    }

    &:not(:first-child) {
      margin-left: 0.125em;
    }

    &.processing {
      &,
      &.kui--tab--active {
        @include TabLabel {
          color: var(--color-base0C);
        }
      }
    }

    /** The "1" suffix of "Tab 1", which we exclude for tabs with custom labels */
    [data-tab-names='fixed'],
    [data-fresh='true'] {
      &:not([data-custom-label]) .kui--tab--label:after {
        content: counter(tab-index);
        transition: font-size 150ms ease-in-out;
      }
    }

    [data-tab-names='fixed'],
    [data-fresh='true'] {
      @include TabLabel {
        padding-right: 0;
      }
    }

    &.kui--tab--active {
      @include TabLabel {
        color: var(--color-text-01);
        font-weight: 600;
        &:hover {
          color: var(--color-text-01);
        }
      }
    }
    @include TabLabel {
      font-size: inherit;
      color: var(--color-text-02);
      padding: 0;
      flex: 1;

      &:hover {
        color: var(--color-text-02);
        background: transparent;
      }

      &:focus {
        border-color: var(--color-brand-03);
      }
    }

    .bx--text-truncate--end {
      display: flex;
      align-items: center;

      .kui--tab--label {
        flex: 1;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
      }
    }

    /* Markdown custom Tab labels */
    .kui--tab--label-text {
      h1,
      h2,
      h3,
      h4,
      p {
        font-size: inherit;
        font-weight: inherit;
        line-height: initial;
        code {
          font-family: var(--font-sans-serif);
        }
      }
    }

    &:hover .kui--tab-close {
      opacity: 1;
    }
    .kui--tab-close {
      transition-property: background-color;
      padding: 1px;
      display: flex;
      cursor: pointer;
      margin: 0 0.375em 0 0.875em;
      opacity: 0;

      svg path {
        fill: transparent;
        transition-property: fill;
        fill: var(--color-text-02);
      }
      &:hover svg path {
        fill: var(--color-text-01);
      }
      &:hover {
        background: var(--color-table-border3);
      }
    }

    &:not(.kui--tab--active) .kui--tab-close:hover {
      background: var(--color-table-border3);
    }
  }

  .kui--top-tab-buttons {
    display: flex;
    flex: 1;
    align-items: center;
    margin: 0 0.375em;

    .kui--top-tab-button {
      display: flex;
      padding: 3px;

      &:hover {
        background: var(--color-table-border3);
      }
    }

    svg {
      fill: var(--color-text-02);
    }
  }
}

@media (max-width: 42rem) {
  .kui--top-tab-stripe {
    display: none;
  }
}

#kui--custom-top-tab-stripe-button-container {
  display: flex;
  justify-content: flex-end;
  position: relative;

  &[num-button='2'] {
    /* number of buttons in the container */
    $numButtons: 2;
    right: calc(-1.875em * #{$numButtons - 1} - 3px);
  }

  &[num-button='4'] {
    /* number of buttons in the container */
    $numButtons: 4;
    right: calc(-1.875em * #{$numButtons - 1} - 3px);
  }

  /*  &:not(:hover) {
    svg[data-active='true'] {
      margin-right: 6px;
    }
  } */

  /* 2.75: height of header; 0.875: font size of header; 24px height of icons */
  $headerHeight: 2.75em;
  $headerFontSize: 0.875;
  $iconSize: 32px;
  $iconPadding: 3px;
  top: calc(((#{$headerHeight} * #{$headerFontSize}) - #{$iconSize}) / 2 + 1px);

  transition-property: right;
  color: var(--color-text-01);

  &:hover {
    /* expose all buttons when hovering over the button container */
    right: 0;

    svg {
      color: var(--color-text-02);

      &,
      &:not([data-active]) {
        /*order: unset;*/
      }

      &[data-active]:not(.kui--rotate-180-then-flip) {
        color: var(--active-tab-color);
        border-bottom-color: currentColor;
      }

      &[data-active].kui--rotate-180-then-flip {
        color: var(--active-tab-color);
        border-top-color: currentColor;
      }
    }
  }

  svg {
    padding: $iconPadding;
    fill: currentColor;
    stroke: currentColor;
    stroke-width: 1;
    border-bottom: 2px solid transparent;
    border-top: 2px solid transparent;

    &:hover {
      opacity: 1;
    }

    &:not([data-active]) {
      order: 99999;
      &:hover {
        cursor: pointer;
        background: var(--color-table-border3);
        color: var(--color-text-01);
      }
    }
  }
}
