.repl-result,
.repl-result-like {
  display: flex;
  flex-wrap: wrap;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.repl-block.error .repl-result {
  flex-direction: column;
}
.repl-result[data-stream] {
  /* streaming output of stdout; make sure stderr occurs below */
  flex-direction: column;
}
.repl-result > p:not(:first-child) {
  padding-top: 1em;
}
.repl.sidecar-visible p {
  white-space: normal;
}
.repl-prompt {
  font: var(--font-monospace);
  line-height: 1em;
  margin-right: 0.5em;
  white-space: nowrap;
  overflow: hidden;
  display: flex;
  --color-prompt-text: var(--color-brand-01);
  --color-prompt-background: transparent;
}
.repl-prompt .repl-selection {
  font-size: 80%;
  opacity: 0.6;
}
.repl-prompt .repl-selection.has-selection-true {
  margin-left: 1ex;
}
.repl-prompt-righty {
  display: flex;
}
.repl-context {
  font-size: 0.875em;
  color: var(--color-prompt-text);
  background-color: var(--color-prompt-background);
  display: flex;
  align-items: center;
  letter-spacing: 0.32px;
  filter: opacity(87.5%) grayscale(50%);
}
/*.repl-block.using-custom-prompt .repl-prompt-righty > svg,
.repl-block.using-custom-prompt .repl-prompt-righty > i,
.repl-block.using-custom-prompt .repl-context {
  display: none;
}*/
.repl-prompt-righty {
  color: var(--color-brand-01);
}
.repl-prompt-righty svg path {
  fill: var(--color-brand-01);
}
.repl-prompt-righty .repl-temporary {
  display: flex;
  align-items: center;
}

/* repl right-hand decorations */
.repl-prompt-right-elements {
  display: flex;
  align-items: center;
  flex: 0;
  white-space: nowrap;
  margin-left: 1em;
}
.kui--repl-prompt-buttons {
  margin-right: 1em;
}
.kui--repl-prompt-buttons .graphical-icon {
  opacity: 0.0375;
}
.repl-block .repl-input:hover .kui--repl-prompt-buttons .graphical-icon {
  opacity: 0.25;
}
.repl-block .repl-input .kui--repl-prompt-buttons .graphical-icon:hover {
  opacity: 1;
  cursor: pointer;
}
.repl-input .kui--repl-prompt-buttons .graphical-icon:hover svg path {
  fill: var(--color-text-01);
}
.repl .repl-prompt-right-element-status-icon.deemphasize {
  font-size: 0.875em; /* see the comment for repl-input re: min-height; that should match this */
  opacity: 1;
  transition-property: all;
}
.repl-block.valid-response
  .repl-prompt-right-element-status-icon
  svg.kui--icon-ok
  path:not([data-icon-path='inner-path']) {
  fill: var(--color-ok);
  stroke: var(--color-ok);
  stroke-opacity: 0.5;
}
svg.kui--error-icon path:not([data-icon-path='inner-path']),
.repl-block.error .repl-prompt-right-element-status-icon svg.kui--icon-error path:not([data-icon-path='inner-path']) {
  fill: var(--color-error);
  stroke: var(--color-error);
  stroke-opacity: 0.5;
}
.repl-prompt-right-elements .repl-prompt-right-element-status-icon:hover {
  opacity: 1;
}

body/*:not(.sidecar-full-screen)*/ repl.sidecar-visible .repl-prompt-lefty, body/*.sidecar-full-screen*/ repl .repl-prompt-lefty {
  display: none;
}
body/*:not(.sidecar-full-screen)*/ repl.sidecar-visible .repl-selection, body/*.sidecar-full-screen*/ repl .repl-selection {
  /* collapse the context and selection when the sidecar is visible */
  width: 0;
  min-width: 0;
  opacity: 0 !important;
  margin: 0 !important;
}
.repl-result,
.repl-result-like,
.repl-input input,
.repl-input-like {
  font-size: 0.875em;
}
.repl-block:not(.processing) .repl-result-like:last-child {
  margin-bottom: 0.375em;
}
.repl-input input,
.repl-input-like {
  --color-caret: var(--color-support-01);
  color: var(--color-text-01);
  background: transparent;
  border: none;
  flex: 1;
  caret-color: var(--color-caret);
  overflow: hidden;
  white-space: nowrap;
  /* text-overflow: ellipsis; see https://github.com/IBM/kui/issues/3539 */
}
.kui--prompt-like:empty {
  border-right: 1ex solid var(--color-caret);
}
.repl-input input:focus,
.repl-input-like:focus {
  outline: none;
}

.repl-block.valid-response .oops,
.repl-block.error .oops,
.clickable.oops,
.oops .oops-text-on-oops,
.red-text {
  opacity: 1 !important;
  white-space: pre-wrap;
}
.header .clickable.oops {
  font-weight: 900;
}
.repl-input,
.repl-output {
  display: flex;
}
.repl-block .result-vertical {
  flex-direction: column;
}
.repl-block .whitespace {
  white-space: pre-wrap;
}
.repl-block.processing .repl-output,
.repl-block.valid-response .repl-output {
  display: flex;
  /* align-items: flex-start; */
}
.sidecar-visible tab:not(.sidecar-is-minimized) .repl-block.processing .repl-output,
.sidecar-visible tab:not(.sidecar-is-minimized) .repl-block.valid-response .repl-output {
  align-items: stretch;
}
.repl-result-spinner {
  font-size: 0.875em;
}
.repl-block .repl-output [data-stream] ~ .repl-result-spinner {
  /* probably not 100% right, but: for pty output, don't show kui's "caret", since xtermjs has its own */
  display: none;
}
.repl-block.processing .repl-result-spinner-inner {
  /* animation: spin 750ms linear infinite; */
  height: auto;
  width: auto;
  opacity: 1;
  transition-delay: 100ms; /* only show the spinner block if the command takes a bit longer */
  display: inline-block;
  background-color: var(--color-processing);
  margin-bottom: 0.25em;
}
.repl-block.processing .repl-result-spinner-inner:after {
  content: '\00a0';
}
.repl-result pre {
  margin: 2px 0; /* firefox needs some vertical padding, otherwise descenders like "y" crop; weird */
  white-space: pre-wrap;
}
.repl-result code {
  /* more invocation results */
  /* here, we override the highlight.js theme, when rendering in the repl */
  background: transparent;
  color: var(--color-text-01);
}

/* when sidecar is visible */
.repl.sidecar-visible .repl-block {
  .bx--inline-loading__text,
  &:not(.processing) .bx--inline-loading svg {
    /* hide repl timestamp (except when processing), and any svgs (always) */
    display: none;
  }
}

/* e.g. reverse-i-search; see Input.tsx */
.repl-input-element.repl-input-hidden {
  opacity: 0;
  width: 0;
}

.repl {
  opacity: 1;
  display: flex;
  flex-direction: column;
  margin: 0;
  padding-top: 1rem;
  flex: 4;
  background-color: var(--color-repl-background);
}
.repl-inner {
  overflow-y: auto;
  flex: 1;
}
.repl-block {
  margin: 0.5em 0 0; /* margin vs padding to help with screenshot rubber banding */
  padding: 0;
  display: flex;
  flex-direction: column;
}
.repl,
.repl-input input {
  font-family: var(--font-monospace);
}

.repl-block {
  .repl-input {
    align-items: center;

    .kui--input-and-context {
      flex: 1;
      display: flex;
      align-items: center;

      input {
        /* make equal to height after right-elements, including inline-loading */
        height: 20px;
      }
    }
  }

  .bx--inline-loading {
    /* carbon override */
    min-height: unset;
  }

  .repl-output {
    .repl-result {
      pre:empty {
        display: none;
      }
    }

    .ok {
      font-size: 0.875em;
      color: var(--color-ok);
    }

    &.valid-response .oops {
      /* oops output often times doesn't word wrap nicely on its own, e.g. help/usage; issue #396 */
      word-break: break-all;
    }
  }

  .bx--inline-loading__animation {
    width: 20px;
    height: 20px;
  }
  .bx--inline-loading__text {
    color: var(--color-text-02);
    font-size: 0.75em;
    opacity: 0.75;
    order: -1;
    margin-right: 0.875em;
  }

  &.processing .repl-prompt-right-element-status-icon {
    .bx--loading.bx--loading--small {
      width: 20px;
      height: 20px;
      .bx--loading__svg {
        .bx--loading__background {
          transform: scale(1.6875);
          stroke: var(--color-text-02);
        }
        .bx--loading__stroke {
          transform: scale(1.6875);
          stroke: var(--color-brand-03);
        }
      }
    }
  }

  &.valid-response .repl-input svg {
    position: unset;
    fill: var(--color-ok);
    /*    width: 20px;
    height: 20px;*/
  }
  &.error .repl-input svg {
    position: unset;
    fill: var(--color-error);
    /*    width: 20px;
    height: 20px;*/
  }
}

.repl-block {
  &.repl-active .bx--accordion__arrow {
    display: none;
  }
  &.error .bx--accordion__arrow {
    fill: var(--color-error);
  }
  &.valid-response .bx--accordion__arrow {
    fill: var(--color-ok);
  }
  &.processing .bx--accordion__arrow {
    fill: var(--color-processing);
    animation: spin 2s infinite linear;
  }

  .bx--accordion__item {
    &,
    &:last-child {
      border: none;
    }

    .bx--accordion__heading {
      color: var(--color-text-01);
      padding: 0;
      font-size: inherit;

      &:hover::before {
        background-color: unset;
      }

      .bx--accordion__title {
        font-size: unset;
        line-height: unset;
        letter-spacing: unset;
        margin: 0;
      }

      .bx--accordion__arrow {
        margin: 2px 0 0;
      }
    }

    .bx--accordion__content {
      padding: 0;
    }

    &:not(.bx--accordion__item--active) {
      /* collapsed accordion */
      .repl-prompt-right-elements {
        display: none;
      }
      .bx--accordion__arrow:not(:hover) {
        opacity: 1;
        fill: var(--color-text-01);
      }
    }
  }
}
