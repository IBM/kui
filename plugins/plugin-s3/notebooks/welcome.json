{
  "apiVersion": "kui-shell/v1",
  "kind": "Notebook",
  "metadata": {
    "name": "Getting Started with S3",
    "preferReExecute": true
  },
  "spec": {
    "splits": [
      {
        "uuid": "2_c57e811f-2da8-557e-a402-9f0950407675",
        "blocks": [
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "# Getting Started with S3\n\nKui has experimental support for using standard shell commands to manipulate your S3 objects. Some of the commands also support [parallel operations](#kuiexec?command=replay%20/kui/s3/parallelization).\n\n> ** This support is still experimental. Please do not use Kui's S3 support against your production data. **\n\nKui currently supports the following S3 providers:\n\n- [minio](https://min.io/), accessible via `/s3/minio/bucket/object`\n- [IBM Cloud Object Storage](https://www.ibm.com/cloud/object-storage), accessible via `/s3/ibm/bucket/object`\n\nWe are eager to add support for more S3 providers. [Let us know](https://github.com/IBM/kui/issues/new) of your requirements."
              }
            },
            "historyIdx": 250,
            "cwd": "~/git/whisk/nickm/kui",
            "command": "#  # Getting Started with S3\\n\\nKui has experimental support for using standard shell commands to manipulate your S3 objects. Some of the commands also support [parallel operations](#kuiexec?command=replay%20/kui/s3/parallelization).\\n\\n> ** This support is still experimental. Please do not use Kui's S3 support against your production data. **\\n\\nKui currently supports the following S3 providers:\\n\\n- [minio](https://min.io/), accessible via `/s3/minio/bucket/object`\\n- [IBM Cloud Object Storage](https://www.ibm.com/cloud/object-storage), accessible via `/s3/ibm/bucket/object`\\n\\nWe are eager to add support for more S3 providers. [Let us know](https://github.com/IBM/kui/issues/new) of your requirements.",
            "startEvent": {
              "route": "/#",
              "startTime": 1602455815872,
              "command": "#  # Getting Started with S3\\n\\nKui has experimental support for using standard shell commands to manipulate your S3 objects. Some of the commands also support [parallel operations](#kuiexec?command=replay%20/kui/s3/parallelization).\\n\\n> ** This support is still experimental. Please do not use Kui's S3 support against your production data. **\\n\\nKui currently supports the following S3 providers:\\n\\n- [minio](https://min.io/), accessible via `/s3/minio/bucket/object`\\n- [IBM Cloud Object Storage](https://www.ibm.com/cloud/object-storage), accessible via `/s3/ibm/bucket/object`\\n\\nWe are eager to add support for more S3 providers. [Let us know](https://github.com/IBM/kui/issues/new) of your requirements.",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 1,
              "execUUID": "89e5ef85-cbe2-4807-933d-ca4e779598a2",
              "echo": true
            },
            "completeEvent": {
              "execType": 1,
              "completeTime": 1602455816021,
              "command": "# # Getting Started with S3\\n\\nKui has experimental support for using standard shell commands to manipulate your S3 objects. Some of the commands also support [parallel operations](#kuiexec?command=replay%20/kui/s3/parallelization).\\n\\n> ** This support is still experimental. Please do not use Kui's S3 support against your production data. **\\n\\nKui currently supports the following S3 providers:\\n\\n- [minio](https://min.io/), accessible via `/s3/minio/bucket/object`\\n- [IBM Cloud Object Storage](https://www.ibm.com/cloud/object-storage), accessible via `/s3/ibm/bucket/object`\\n\\nWe are eager to add support for more S3 providers. [Let us know](https://github.com/IBM/kui/issues/new) of your requirements.",
              "argvNoOptions": [
                "#",
                "  # Getting Started with S3\\n\\nKui has experimental support for using standard shell commands to manipulate your S3 objects. Some of the commands also support [parallel operations](#kuiexec?command=replay%20/kui/s3/parallelization).\\n\\n> ** This support is still experimental. Please do not use Kui's S3 support against your production data. **\\n\\nKui currently supports the following S3 providers:\\n\\n- [minio](https://min.io/), accessible via `/s3/minio/bucket/object`\\n- [IBM Cloud Object Storage](https://www.ibm.com/cloud/object-storage), accessible via `/s3/ibm/bucket/object`\\n\\nWe are eager to add support for more S3 providers. [Let us know](https://github.com/IBM/kui/issues/new) of your requirements."
              ],
              "parsedOptions": {
                "_": [
                  "#",
                  "  # Getting Started with S3\\n\\nKui has experimental support for using standard shell commands to manipulate your S3 objects. Some of the commands also support [parallel operations](#kuiexec?command=replay%20/kui/s3/parallelization).\\n\\n> ** This support is still experimental. Please do not use Kui's S3 support against your production data. **\\n\\nKui currently supports the following S3 providers:\\n\\n- [minio](https://min.io/), accessible via `/s3/minio/bucket/object`\\n- [IBM Cloud Object Storage](https://www.ibm.com/cloud/object-storage), accessible via `/s3/ibm/bucket/object`\\n\\nWe are eager to add support for more S3 providers. [Let us know](https://github.com/IBM/kui/issues/new) of your requirements."
                ]
              },
              "execUUID": "89e5ef85-cbe2-4807-933d-ca4e779598a2",
              "cancelled": false,
              "echo": true,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "echo": true,
                "type": 1,
                "execUUID": "89e5ef85-cbe2-4807-933d-ca4e779598a2",
                "history": 250,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "# Getting Started with S3\n\nKui has experimental support for using standard shell commands to manipulate your S3 objects. Some of the commands also support [parallel operations](#kuiexec?command=replay%20/kui/s3/parallelization).\n\n> ** This support is still experimental. Please do not use Kui's S3 support against your production data. **\n\nKui currently supports the following S3 providers:\n\n- [minio](https://min.io/), accessible via `/s3/minio/bucket/object`\n- [IBM Cloud Object Storage](https://www.ibm.com/cloud/object-storage), accessible via `/s3/ibm/bucket/object`\n\nWe are eager to add support for more S3 providers. [Let us know](https://github.com/IBM/kui/issues/new) of your requirements."
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 250
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "89e5ef85-cbe2-4807-933d-ca4e779598a2",
            "startTime": 1602455815872,
            "prefersTerminalPresentation": false,
            "outputOnly": true,
            "state": "valid-response"
          }
        ]
      },
      {
        "uuid": "2_0a9586b6-2f57-5d3b-9619-b5cdb6a76d53",
        "blocks": [
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "## Available Commands\n\nThe following commands support s3 filepaths. For example, when using minio, a filepath would be `/s3/minio/myBucket/myObject`.\n\n- `cp src dst`, where either or both of the source and destination can be s3 filepaths. You may provide multiple sources, and each may be a [glob pattern](https://en.wikipedia.org/wiki/Glob_(programming)). If you add the `-P` option, the created S3 objects will have the public bit set.\n\n- `ls f1 f2 f3`. As with `cp`, you may intermix s3 and local files, and use glob patterns.\n\n- `rmdir`, `rm`, and `mv` are also supported\n\n- Highly experimental: `gzip f1 f2 f3`, which will attempt to parallelize the gzip across the s3 globs you have specified. This operation currently requires a Job scheduling backend to have been identified. We cover this in more detail to the right."
              }
            },
            "historyIdx": 250,
            "cwd": "~/git/whisk/nickm/kui",
            "command": "#  ## Available Commands\\n\\nThe following commands support s3 filepaths. For example, when using minio, a filepath would be `/s3/minio/myBucket/myObject`.\\n\\n- `cp src dst`, where either or both of the source and destination can be s3 filepaths. You may provide multiple sources, and each may be a [glob pattern](https://en.wikipedia.org/wiki/Glob_(programming)). If you add the `-P` option, the created S3 objects will have the public bit set.\\n\\n- `ls f1 f2 f3`. As with `cp`, you may intermix s3 and local files, and use glob patterns.\\n\\n- `rmdir`, `rm`, and `mv` are also supported\\n\\n- Highly experimental: `gzip f1 f2 f3`, which will attempt to parallelize the gzip across the s3 globs you have specified. This operation currently requires a Job scheduling backend to have been identified. We cover this in more detail to the right.",
            "startEvent": {
              "route": "/#",
              "startTime": 1602455815876,
              "command": "#  ## Available Commands\\n\\nThe following commands support s3 filepaths. For example, when using minio, a filepath would be `/s3/minio/myBucket/myObject`.\\n\\n- `cp src dst`, where either or both of the source and destination can be s3 filepaths. You may provide multiple sources, and each may be a [glob pattern](https://en.wikipedia.org/wiki/Glob_(programming)). If you add the `-P` option, the created S3 objects will have the public bit set.\\n\\n- `ls f1 f2 f3`. As with `cp`, you may intermix s3 and local files, and use glob patterns.\\n\\n- `rmdir`, `rm`, and `mv` are also supported\\n\\n- Highly experimental: `gzip f1 f2 f3`, which will attempt to parallelize the gzip across the s3 globs you have specified. This operation currently requires a Job scheduling backend to have been identified. We cover this in more detail to the right.",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 1,
              "execUUID": "08800557-1d00-43e1-80a0-321d9361b0de",
              "echo": true
            },
            "completeEvent": {
              "execType": 1,
              "completeTime": 1602455816021,
              "command": "# ## Available Commands\\n\\nThe following commands support s3 filepaths. For example, when using minio, a filepath would be `/s3/minio/myBucket/myObject`.\\n\\n- `cp src dst`, where either or both of the source and destination can be s3 filepaths. You may provide multiple sources, and each may be a [glob pattern](https://en.wikipedia.org/wiki/Glob_(programming)). If you add the `-P` option, the created S3 objects will have the public bit set.\\n\\n- `ls f1 f2 f3`. As with `cp`, you may intermix s3 and local files, and use glob patterns.\\n\\n- `rmdir`, `rm`, and `mv` are also supported\\n\\n- Highly experimental: `gzip f1 f2 f3`, which will attempt to parallelize the gzip across the s3 globs you have specified. This operation currently requires a Job scheduling backend to have been identified. We cover this in more detail to the right.",
              "argvNoOptions": [
                "#",
                "  ## Available Commands\\n\\nThe following commands support s3 filepaths. For example, when using minio, a filepath would be `/s3/minio/myBucket/myObject`.\\n\\n- `cp src dst`, where either or both of the source and destination can be s3 filepaths. You may provide multiple sources, and each may be a [glob pattern](https://en.wikipedia.org/wiki/Glob_(programming)). If you add the `-P` option, the created S3 objects will have the public bit set.\\n\\n- `ls f1 f2 f3`. As with `cp`, you may intermix s3 and local files, and use glob patterns.\\n\\n- `rmdir`, `rm`, and `mv` are also supported\\n\\n- Highly experimental: `gzip f1 f2 f3`, which will attempt to parallelize the gzip across the s3 globs you have specified. This operation currently requires a Job scheduling backend to have been identified. We cover this in more detail to the right."
              ],
              "parsedOptions": {
                "_": [
                  "#",
                  "  ## Available Commands\\n\\nThe following commands support s3 filepaths. For example, when using minio, a filepath would be `/s3/minio/myBucket/myObject`.\\n\\n- `cp src dst`, where either or both of the source and destination can be s3 filepaths. You may provide multiple sources, and each may be a [glob pattern](https://en.wikipedia.org/wiki/Glob_(programming)). If you add the `-P` option, the created S3 objects will have the public bit set.\\n\\n- `ls f1 f2 f3`. As with `cp`, you may intermix s3 and local files, and use glob patterns.\\n\\n- `rmdir`, `rm`, and `mv` are also supported\\n\\n- Highly experimental: `gzip f1 f2 f3`, which will attempt to parallelize the gzip across the s3 globs you have specified. This operation currently requires a Job scheduling backend to have been identified. We cover this in more detail to the right."
                ]
              },
              "execUUID": "08800557-1d00-43e1-80a0-321d9361b0de",
              "cancelled": false,
              "echo": true,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "echo": true,
                "type": 1,
                "execUUID": "08800557-1d00-43e1-80a0-321d9361b0de",
                "history": 250,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "## Available Commands\n\nThe following commands support s3 filepaths. For example, when using minio, a filepath would be `/s3/minio/myBucket/myObject`.\n\n- `cp src dst`, where either or both of the source and destination can be s3 filepaths. You may provide multiple sources, and each may be a [glob pattern](https://en.wikipedia.org/wiki/Glob_(programming)). If you add the `-P` option, the created S3 objects will have the public bit set.\n\n- `ls f1 f2 f3`. As with `cp`, you may intermix s3 and local files, and use glob patterns.\n\n- `rmdir`, `rm`, and `mv` are also supported\n\n- Highly experimental: `gzip f1 f2 f3`, which will attempt to parallelize the gzip across the s3 globs you have specified. This operation currently requires a Job scheduling backend to have been identified. We cover this in more detail to the right."
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 250
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "08800557-1d00-43e1-80a0-321d9361b0de",
            "startTime": 1602455815876,
            "prefersTerminalPresentation": false,
            "outputOnly": true,
            "state": "valid-response"
          }
        ]
      },
      {
        "uuid": "2_cd0d8750-9c3b-5e47-bb06-8b8fe6c85bfb",
        "blocks": [
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "## Next Steps\n\n[Using S3 with Kui](#kuiexec?command=replay%20/kui/s3/using-s3.json)"
              }
            },
            "historyIdx": 256,
            "cwd": "~/git/whisk/nickm/kui",
            "command": "# ## Next Steps\\n\\n[Using S3 with Kui](#kuiexec?command=replay%20/kui/s3/using-s3.json)",
            "startEvent": {
              "route": "/#",
              "startTime": 1602455830097,
              "command": "# ## Next Steps\\n\\n[Using S3 with Kui](#kuiexec?command=replay%20/kui/s3/using-s3.json)",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 0,
              "execUUID": "27297682-6aca-41c6-a615-a13e7688473e"
            },
            "completeEvent": {
              "execType": 0,
              "completeTime": 1602455830124,
              "command": "# ## Next Steps\\n\\n[Using S3 with Kui](#kuiexec?command=replay%20/kui/s3/using-s3.json)",
              "argvNoOptions": ["#"],
              "parsedOptions": {
                "_": ["#"]
              },
              "execUUID": "27297682-6aca-41c6-a615-a13e7688473e",
              "cancelled": false,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "c58564bc-a23a-4a1e-ac2b-17585227835e",
                "history": 256,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "## Next Steps\n\n[Using S3 with Kui](#kuiexec?command=replay%20/kui/s3/using-s3.json)"
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 256
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "27297682-6aca-41c6-a615-a13e7688473e",
            "startTime": 1602455830097,
            "prefersTerminalPresentation": false,
            "outputOnly": true,
            "state": "valid-response"
          }
        ]
      },
      {
        "uuid": "2_8205f6b8-87bf-5679-ac83-e3519c17d89c",
        "blocks": [
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "## Setting up your connection to S3\n\nLet us ensure that you are set up properly to access your S3 Provider."
              }
            },
            "historyIdx": 250,
            "cwd": "~/git/whisk/nickm/kui",
            "command": "# ## Setting up your connection to S3\\n\\nLet us ensure that you are set up properly to access your S3 Provider.",
            "startEvent": {
              "route": "/#",
              "startTime": 1602455815880,
              "command": "# ## Setting up your connection to S3\\n\\nLet us ensure that you are set up properly to access your S3 Provider.",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 1,
              "execUUID": "e62d6e3e-07da-418c-9d5e-06db9a6e631c",
              "echo": true
            },
            "completeEvent": {
              "execType": 1,
              "completeTime": 1602455816021,
              "command": "# ## Setting up your connection to S3\\n\\nLet us ensure that you are set up properly to access your S3 Provider.",
              "argvNoOptions": [
                "#",
                "  ## Setting up your connection to S3\\n\\nFirst, let us ensure that you are set up properly to access your S3 Provider."
              ],
              "parsedOptions": {
                "_": [
                  "#",
                  "  ## Setting up your connection to S3\\n\\nFirst, let us ensure that you are set up properly to access your S3 Provider."
                ]
              },
              "execUUID": "e62d6e3e-07da-418c-9d5e-06db9a6e631c",
              "cancelled": false,
              "echo": true,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "echo": true,
                "type": 1,
                "execUUID": "50fa6c2b-254a-4e87-ab5b-bd2f1563c9e2",
                "history": 250,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "## Setting up your connection to S3\n\nLet us ensure that you are set up properly to access your S3 Provider."
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 250
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "e62d6e3e-07da-418c-9d5e-06db9a6e631c",
            "startTime": 1602455815880,
            "prefersTerminalPresentation": false,
            "outputOnly": true,
            "state": "valid-response"
          },
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "### Option 1: I am using Minio\n\nMinio uses environment variables to communicate its credentials. We can confirm that you have these. Rerun the following commands to check that you have the necessary variables configured:"
              }
            },
            "historyIdx": 251,
            "cwd": "~/git/whisk/nickm/kui",
            "command": "#  ### Option 1: I am using Minio\\n\\nMinio uses environment variables to communicate its credentials. We can confirm that you have these. Rerun the following commands to check that you have the necessary variables configured:",
            "startEvent": {
              "route": "/#",
              "startTime": 1602455816067,
              "command": "#  ### Option 1: I am using Minio\\n\\nMinio uses environment variables to communicate its credentials. We can confirm that you have these. Rerun the following commands to check that you have the necessary variables configured:",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 1,
              "execUUID": "fb59656a-d8b6-4414-b1d9-d784b8df9838",
              "echo": true
            },
            "completeEvent": {
              "execType": 1,
              "completeTime": 1602455816084,
              "command": "# ### Option 1: I am using Minio\\n\\nMinio uses environment variables to communicate its credentials. We can confirm that you have these. Rerun the following commands to check that you have the necessary variables configured:",
              "argvNoOptions": [
                "#",
                "  ### Option 1: I am using Minio\\n\\nMinio uses environment variables to communicate its credentials. We can confirm that you have these. Rerun the following commands to check that you have the necessary variables configured:"
              ],
              "parsedOptions": {
                "_": [
                  "#",
                  "  ### Option 1: I am using Minio\\n\\nMinio uses environment variables to communicate its credentials. We can confirm that you have these. Rerun the following commands to check that you have the necessary variables configured:"
                ]
              },
              "execUUID": "fb59656a-d8b6-4414-b1d9-d784b8df9838",
              "cancelled": false,
              "echo": true,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "echo": true,
                "type": 1,
                "execUUID": "3b1e409d-cb6c-4d4b-b2db-adf10354af60",
                "history": 251,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "### Option 1: I am using Minio\n\nMinio uses environment variables to communicate its credentials. We can confirm that you have these. Rerun the following commands to check that you have the necessary variables configured:"
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 251
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "fb59656a-d8b6-4414-b1d9-d784b8df9838",
            "startTime": 1602455816067,
            "prefersTerminalPresentation": false,
            "outputOnly": true,
            "state": "valid-response"
          },
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "XtermResponse",
              "rows": [
                [
                  {
                    "innerText": "no",
                    "classList": [],
                    "style": {},
                    "textContent": "n"
                  }
                ]
              ]
            },
            "historyIdx": 252,
            "cwd": "~/git/whisk/nickm/kui",
            "command": "printenv MINIO_ACCESS_KEY && echo yes || echo no",
            "startEvent": {
              "route": "*",
              "startTime": 1602455816109,
              "command": "printenv MINIO_ACCESS_KEY && echo yes || echo no",
              "evaluatorOptions": {},
              "execType": 1,
              "execUUID": "1e584c2a-743d-44d0-81b7-2b00742a0db0",
              "echo": true
            },
            "completeEvent": {
              "execType": 1,
              "completeTime": 1602455816585,
              "command": "printenv MINIO_ACCESS_KEY && echo yes || echo no",
              "argvNoOptions": ["printenv", "MINIO_ACCESS_KEY", "&&", "echo", "yes", "||", "echo", "no"],
              "parsedOptions": {
                "_": ["printenv", "MINIO_ACCESS_KEY", "&&", "echo", "yes", "||", "echo", "no"]
              },
              "execUUID": "1e584c2a-743d-44d0-81b7-2b00742a0db0",
              "cancelled": false,
              "echo": true,
              "evaluatorOptions": {},
              "execOptions": {
                "echo": true,
                "type": 1,
                "execUUID": "74ce4dc4-8b5a-4b30-b24b-4cf4abaecc80",
                "history": 252,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "XtermResponse",
                "rows": [
                  [
                    {
                      "innerText": "no",
                      "classList": [],
                      "style": {},
                      "textContent": "n"
                    }
                  ]
                ]
              },
              "responseType": "ScalarResponse",
              "historyIdx": 252
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "1e584c2a-743d-44d0-81b7-2b00742a0db0",
            "startTime": 1602455816109,
            "prefersTerminalPresentation": false,
            "outputOnly": false,
            "state": "valid-response"
          },
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "XtermResponse",
              "rows": [
                [
                  {
                    "innerText": "no",
                    "classList": [],
                    "style": {},
                    "textContent": "n"
                  }
                ]
              ]
            },
            "historyIdx": 253,
            "cwd": "~/git/whisk/nickm/kui",
            "command": "printenv MINIO_SECRET_KEY && echo yes || echo no",
            "startEvent": {
              "route": "*",
              "startTime": 1602455816623,
              "command": "printenv MINIO_SECRET_KEY && echo yes || echo no",
              "evaluatorOptions": {},
              "execType": 1,
              "execUUID": "db2d2177-f938-4e33-bbe1-007ed7c89cb9",
              "echo": true
            },
            "completeEvent": {
              "execType": 1,
              "completeTime": 1602455816751,
              "command": "printenv MINIO_SECRET_KEY && echo yes || echo no",
              "argvNoOptions": ["printenv", "MINIO_SECRET_KEY", "&&", "echo", "yes", "||", "echo", "no"],
              "parsedOptions": {
                "_": ["printenv", "MINIO_SECRET_KEY", "&&", "echo", "yes", "||", "echo", "no"]
              },
              "execUUID": "db2d2177-f938-4e33-bbe1-007ed7c89cb9",
              "cancelled": false,
              "echo": true,
              "evaluatorOptions": {},
              "execOptions": {
                "echo": true,
                "type": 1,
                "execUUID": "6551d8fc-e5fc-458d-9ae3-0a93916dd9de",
                "history": 253,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "XtermResponse",
                "rows": [
                  [
                    {
                      "innerText": "no",
                      "classList": [],
                      "style": {},
                      "textContent": "n"
                    }
                  ]
                ]
              },
              "responseType": "ScalarResponse",
              "historyIdx": 253
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "db2d2177-f938-4e33-bbe1-007ed7c89cb9",
            "startTime": 1602455816623,
            "prefersTerminalPresentation": false,
            "outputOnly": false,
            "state": "valid-response"
          },
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "### Option 2: I am using IBM Cloud\n\nTo verify your connection to IBM Cloud Object Storage, you may rerun this command:"
              }
            },
            "historyIdx": 254,
            "cwd": "~/git/whisk/nickm/kui",
            "command": "#  ### Option 2: I am using IBM Cloud\\n\\nTo verify your connection to IBM Cloud Object Storage, you may rerun this command:",
            "startEvent": {
              "route": "/#",
              "startTime": 1602455816808,
              "command": "#  ### Option 2: I am using IBM Cloud\\n\\nTo verify your connection to IBM Cloud Object Storage, you may rerun this command:",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 1,
              "execUUID": "31c7a0e4-c301-4198-923a-68e2cc802f39",
              "echo": true
            },
            "completeEvent": {
              "execType": 1,
              "completeTime": 1602455816827,
              "command": "# ### Option 2: I am using IBM Cloud\\n\\nTo verify your connection to IBM Cloud Object Storage, you may rerun this command:",
              "argvNoOptions": [
                "#",
                "  ### Option 2: I am using IBM Cloud\\n\\nTo verify your connection to IBM Cloud Object Storage, you may rerun this command:"
              ],
              "parsedOptions": {
                "_": [
                  "#",
                  "  ### Option 2: I am using IBM Cloud\\n\\nTo verify your connection to IBM Cloud Object Storage, you may rerun this command:"
                ]
              },
              "execUUID": "31c7a0e4-c301-4198-923a-68e2cc802f39",
              "cancelled": false,
              "echo": true,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "echo": true,
                "type": 1,
                "execUUID": "737259b5-b821-4aaf-82a4-a6069fbbf6ac",
                "history": 254,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "### Option 2: I am using IBM Cloud\n\nTo verify your connection to IBM Cloud Object Storage, you may rerun this command:"
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 254
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "31c7a0e4-c301-4198-923a-68e2cc802f39",
            "startTime": 1602455816808,
            "prefersTerminalPresentation": false,
            "outputOnly": true,
            "state": "valid-response"
          },
          {
            "response": {},
            "historyIdx": 255,
            "cwd": "~/git/whisk/nickm/kui",
            "command": "ibmcloud cos validate",
            "startEvent": {
              "route": "/ibmcloud/cos/validate",
              "startTime": 1602455816861,
              "command": "ibmcloud cos validate",
              "evaluatorOptions": {
                "plugin": "plugin-ibmcloud/cos"
              },
              "execType": 1,
              "execUUID": "c557c93a-853f-4068-9428-a61abd075128",
              "echo": true
            },
            "completeEvent": {
              "execType": 1,
              "completeTime": 1602455816894,
              "command": "ibmcloud cos validate",
              "argvNoOptions": ["ibmcloud", "cos", "validate"],
              "parsedOptions": {
                "_": ["ibmcloud", "cos", "validate"]
              },
              "execUUID": "c557c93a-853f-4068-9428-a61abd075128",
              "cancelled": false,
              "echo": true,
              "evaluatorOptions": {
                "plugin": "plugin-ibmcloud/cos"
              },
              "execOptions": {
                "echo": true,
                "type": 1,
                "execUUID": "5c795a39-3b43-46bd-870e-a50bb79c3e61",
                "history": 255,
                "env": {}
              },
              "response": {},
              "responseType": "ScalarResponse",
              "historyIdx": 255
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "c557c93a-853f-4068-9428-a61abd075128",
            "startTime": 1602455816861,
            "prefersTerminalPresentation": false,
            "outputOnly": false,
            "state": "valid-response"
          }
        ]
      }
    ]
  }
}
