{
  "apiVersion": "kui-shell/v1",
  "kind": "Notebook",
  "metadata": {
    "name": "Kubernetes &mdash; ` Deploying Applications`",
    "description": "Kubernetes &mdash; `Deploying Applications`"
  },
  "spec": {
    "splits": [
      {
        "uuid": "1_c57e811f-2da8-557e-a402-9f0950407675",
        "blocks": [
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "# Example: Deploying PHP Guestbook Application with Redis\nThis tutorial shows you how to build and deploy a simple, multi-tier web application using Kubernetes and Docker. \n"
              }
            },
            "historyIdx": 250,
            "cwd": "~/Workspace8/kui",
            "command": "# # Example: Deploying PHP Guestbook Application with Redis\\nThis tutorial shows you how to build and deploy a simple, multi-tier web application using Kubernetes and Docker. \\n",
            "startEvent": {
              "route": "/#",
              "startTime": 1606140829023,
              "command": "# # Example: Deploying PHP Guestbook Application with Redis\\nThis tutorial shows you how to build and deploy a simple, multi-tier web application using Kubernetes and Docker. \\n",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 0,
              "execUUID": "681c7efd-3a20-4e26-b727-8135dd756000",
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "f71fcf34-3d25-4388-b8c6-d74588e8e4a4",
                "history": 250,
                "env": {}
              }
            },
            "completeEvent": {
              "execType": 0,
              "completeTime": 1606140829056,
              "command": "# # Example: Deploying PHP Guestbook Application with Redis\\nThis tutorial shows you how to build and deploy a simple, multi-tier web application using Kubernetes and Docker. \\n",
              "argvNoOptions": ["#"],
              "parsedOptions": {
                "_": ["#"]
              },
              "execUUID": "681c7efd-3a20-4e26-b727-8135dd756000",
              "cancelled": false,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "f71fcf34-3d25-4388-b8c6-d74588e8e4a4",
                "history": 250,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "# Example: Deploying PHP Guestbook Application with Redis\nThis tutorial shows you how to build and deploy a simple, multi-tier web application using Kubernetes and Docker. \n"
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 250
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "681c7efd-3a20-4e26-b727-8135dd756000",
            "startTime": 1606140829023,
            "outputOnly": true,
            "state": "valid-response"
          },
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "# Objectives\nIn this notebook, you will:\n\n### Start up the Redis Master \nThe guestbook application uses Redis to store its data. It writes its data to a Redis master instance and reads data from multiple Redis slave instances.\n\n### Start up the Redis Slaves\nAlthough the Redis master is a single pod, you can make it highly available to meet traffic demands by adding replica Redis slaves.\n\n\n### Set up and Expose the Guestbook Frontend\nThe guestbook application has a web frontend serving the HTTP requests written in PHP. It is configured to connect to the redis-master Service for write requests and the redis-slave service for Read requests.\n\n\n\n"
              }
            },
            "historyIdx": 251,
            "cwd": "~/Workspace8/kui",
            "command": "# # Objectives\\nIn this notebook, you will:\\n\\n### Start up the Redis Master \\nThe guestbook application uses Redis to store its data. It writes its data to a Redis master instance and reads data from multiple Redis slave instances.\\n\\n### Start up the Redis Slaves\\nAlthough the Redis master is a single pod, you can make it highly available to meet traffic demands by adding replica Redis slaves.\\n\\n\\n### Set up and Expose the Guestbook Frontend\\nThe guestbook application has a web frontend serving the HTTP requests written in PHP. It is configured to connect to the redis-master Service for write requests and the redis-slave service for Read requests.\\n\\n\\n\\n",
            "startEvent": {
              "route": "/#",
              "startTime": 1606174197598,
              "command": "# # Objectives\\nIn this notebook, you will:\\n\\n### Start up the Redis Master \\nThe guestbook application uses Redis to store its data. It writes its data to a Redis master instance and reads data from multiple Redis slave instances.\\n\\n### Start up the Redis Slaves\\nAlthough the Redis master is a single pod, you can make it highly available to meet traffic demands by adding replica Redis slaves.\\n\\n\\n### Set up and Expose the Guestbook Frontend\\nThe guestbook application has a web frontend serving the HTTP requests written in PHP. It is configured to connect to the redis-master Service for write requests and the redis-slave service for Read requests.\\n\\n\\n\\n",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 0,
              "execUUID": "8ff9a436-9742-4ba8-ba34-8292766c22a4",
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "24be82cd-775e-4993-9230-f4996d83ab1a",
                "history": 251,
                "env": {}
              }
            },
            "completeEvent": {
              "execType": 0,
              "completeTime": 1606174197611,
              "command": "# # Objectives\\nIn this notebook, you will:\\n\\n### Start up the Redis Master \\nThe guestbook application uses Redis to store its data. It writes its data to a Redis master instance and reads data from multiple Redis slave instances.\\n\\n### Start up the Redis Slaves\\nAlthough the Redis master is a single pod, you can make it highly available to meet traffic demands by adding replica Redis slaves.\\n\\n\\n### Set up and Expose the Guestbook Frontend\\nThe guestbook application has a web frontend serving the HTTP requests written in PHP. It is configured to connect to the redis-master Service for write requests and the redis-slave service for Read requests.\\n\\n\\n\\n",
              "argvNoOptions": ["#"],
              "parsedOptions": {
                "_": ["#"]
              },
              "execUUID": "8ff9a436-9742-4ba8-ba34-8292766c22a4",
              "cancelled": false,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "24be82cd-775e-4993-9230-f4996d83ab1a",
                "history": 251,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "# Objectives\nIn this notebook, you will:\n\n### Start up the Redis Master \nThe guestbook application uses Redis to store its data. It writes its data to a Redis master instance and reads data from multiple Redis slave instances.\n\n### Start up the Redis Slaves\nAlthough the Redis master is a single pod, you can make it highly available to meet traffic demands by adding replica Redis slaves.\n\n\n### Set up and Expose the Guestbook Frontend\nThe guestbook application has a web frontend serving the HTTP requests written in PHP. It is configured to connect to the redis-master Service for write requests and the redis-slave service for Read requests.\n\n\n\n"
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 251
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "8ff9a436-9742-4ba8-ba34-8292766c22a4",
            "startTime": 1606174197598,
            "outputOnly": true,
            "state": "valid-response"
          },
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "First, let's create a namespace to keep our work isolated:"
              }
            },
            "historyIdx": 250,
            "cwd": "~/Workspace8/kui",
            "command": "# First, let's create a namespace to keep our work isolated:",
            "startEvent": {
              "route": "/#",
              "startTime": 1606172990349,
              "command": "# First, let's create a namespace to keep our work isolated:",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 0,
              "execUUID": "844b1578-b2be-4fed-b23d-5eb98d1a79d9",
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "16408b44-84c4-4ea1-8109-a52a9ee5bc60",
                "history": 250,
                "env": {}
              }
            },
            "completeEvent": {
              "execType": 0,
              "completeTime": 1606172990586,
              "command": "# First, let's create a namespace to keep our work isolated:",
              "argvNoOptions": ["#"],
              "parsedOptions": {
                "_": ["#"]
              },
              "execUUID": "844b1578-b2be-4fed-b23d-5eb98d1a79d9",
              "cancelled": false,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "16408b44-84c4-4ea1-8109-a52a9ee5bc60",
                "history": 250,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "First, let's create a namespace to keep our work isolated:"
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 250
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "844b1578-b2be-4fed-b23d-5eb98d1a79d9",
            "startTime": 1606172990349,
            "outputOnly": true,
            "state": "valid-response"
          },
          {
            "response": {
              "header": {
                "key": "NAME",
                "name": "Name",
                "attributes": [
                  {
                    "key": "KIND",
                    "value": "Kind",
                    "outerCSS": ""
                  },
                  {
                    "key": "STATUS",
                    "value": "Status",
                    "outerCSS": ""
                  }
                ]
              },
              "body": [
                {
                  "name": "kui-notebook-3",
                  "onclick": {
                    "startEvent": {
                      "route": "/kubeui/kubectl/get/ns",
                      "startTime": 1606173120590,
                      "command": "kubectl get ns -n default kui-notebook-3 -o yaml",
                      "evaluatorOptions": {
                        "flags": {
                          "configuration": {
                            "short-option-groups": false,
                            "duplicate-arguments-array": false
                          },
                          "narg": {
                            "w": 0,
                            "watch": 0,
                            "watch-only": 0
                          },
                          "boolean": [
                            "w",
                            "watch",
                            "watch-only",
                            "A",
                            "all-namespaces",
                            "ignore-not-found",
                            "no-headers",
                            "i",
                            "it",
                            "ti",
                            "stdin",
                            "t",
                            "tty",
                            "R",
                            "recursive",
                            "server-print",
                            "show-kind",
                            "show-labels"
                          ]
                        },
                        "plugin": "plugin-kubectl"
                      },
                      "execType": 1,
                      "execUUID": "ff990de2-d668-4bb5-b39b-f0b136391aef",
                      "execOptions": {
                        "echo": true,
                        "type": 1,
                        "execUUID": "ff990de2-d668-4bb5-b39b-f0b136391aef",
                        "history": 250,
                        "env": {}
                      },
                      "echo": true
                    },
                    "completeEvent": {
                      "execType": 1,
                      "completeTime": 1606173121223,
                      "command": "kubectl get ns -n default kui-notebook-3 -o yaml",
                      "argvNoOptions": ["kubectl", "get", "ns", "kui-notebook-3"],
                      "parsedOptions": {
                        "_": ["kubectl", "get", "ns", "kui-notebook-3"],
                        "n": "default",
                        "o": "yaml"
                      },
                      "execUUID": "ff990de2-d668-4bb5-b39b-f0b136391aef",
                      "cancelled": false,
                      "echo": true,
                      "evaluatorOptions": {
                        "flags": {
                          "configuration": {
                            "short-option-groups": false,
                            "duplicate-arguments-array": false
                          },
                          "narg": {
                            "w": 0,
                            "watch": 0,
                            "watch-only": 0
                          },
                          "boolean": [
                            "w",
                            "watch",
                            "watch-only",
                            "A",
                            "all-namespaces",
                            "ignore-not-found",
                            "no-headers",
                            "i",
                            "it",
                            "ti",
                            "stdin",
                            "t",
                            "tty",
                            "R",
                            "recursive",
                            "server-print",
                            "show-kind",
                            "show-labels"
                          ]
                        },
                        "plugin": "plugin-kubectl"
                      },
                      "execOptions": {
                        "echo": true,
                        "type": 1,
                        "execUUID": "ff990de2-d668-4bb5-b39b-f0b136391aef",
                        "history": 250,
                        "env": {}
                      },
                      "response": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                          "creationTimestamp": "2020-11-23T23:10:03Z",
                          "managedFields": [
                            {
                              "apiVersion": "v1",
                              "fieldsType": "FieldsV1",
                              "fieldsV1": {
                                "f:status": {
                                  "f:phase": {}
                                }
                              },
                              "manager": "kubectl-create",
                              "operation": "Update",
                              "time": "2020-11-23T23:10:03Z"
                            }
                          ],
                          "name": "kui-notebook-3",
                          "resourceVersion": "14147",
                          "selfLink": "/api/v1/namespaces/kui-notebook-3",
                          "uid": "c58e3aad-7321-4afb-8ce4-47707a3c9e60"
                        },
                        "spec": {
                          "finalizers": ["kubernetes"]
                        },
                        "status": {
                          "phase": "Active"
                        },
                        "isKubeResource": true,
                        "originatingCommand": {
                          "REPL": {},
                          "argv": ["kubectl", "get", "ns", "-n", "default", "kui-notebook-3", "-o", "yaml"],
                          "command": "kubectl get ns -n default kui-notebook-3 -o yaml",
                          "execOptions": {
                            "echo": true,
                            "type": 1,
                            "execUUID": "ff990de2-d668-4bb5-b39b-f0b136391aef",
                            "history": 250,
                            "env": {}
                          },
                          "argvNoOptions": ["kubectl", "get", "ns", "kui-notebook-3"],
                          "parsedOptions": {
                            "_": ["kubectl", "get", "ns", "kui-notebook-3"],
                            "n": "default",
                            "o": "yaml"
                          }
                        },
                        "kuiRawData": "apiVersion: v1\nkind: Namespace\nmetadata:\n  creationTimestamp: \"2020-11-23T23:10:03Z\"\n  managedFields:\n  - apiVersion: v1\n    fieldsType: FieldsV1\n    fieldsV1:\n      f:status:\n        f:phase: {}\n    manager: kubectl-create\n    operation: Update\n    time: \"2020-11-23T23:10:03Z\"\n  name: kui-notebook-3\n  resourceVersion: \"14147\"\n  selfLink: /api/v1/namespaces/kui-notebook-3\n  uid: c58e3aad-7321-4afb-8ce4-47707a3c9e60\nspec:\n  finalizers:\n  - kubernetes\nstatus:\n  phase: Active\n",
                        "toolbarText": {
                          "type": "info",
                          "text": "Created on **11/23/2020, 6:10:03 PM**. Version **14147**."
                        },
                        "onclick": {
                          "kind": "kubectl get Namespace -n undefined",
                          "name": "kubectl get Namespace -n undefined kui-notebook-3"
                        },
                        "modes": []
                      },
                      "responseType": "MultiModalResponse",
                      "historyIdx": 250
                    }
                  },
                  "onclickIdempotent": true,
                  "attributes": [
                    {
                      "key": "KIND",
                      "value": "ns",
                      "outerCSS": "",
                      "css": ""
                    },
                    {
                      "key": "STATUS",
                      "tag": "badge",
                      "value": "Active",
                      "outerCSS": "",
                      "css": "green-background"
                    }
                  ],
                  "key": "NAME"
                }
              ]
            },
            "historyIdx": 251,
            "cwd": "~/Workspace8/kui",
            "command": "kubectl create ns kui-notebook-3",
            "startEvent": {
              "route": "/kubeui/kubectl/create",
              "startTime": 1606173003173,
              "command": "kubectl create ns kui-notebook-3",
              "evaluatorOptions": {
                "flags": {
                  "configuration": {
                    "short-option-groups": false,
                    "duplicate-arguments-array": false
                  },
                  "narg": {
                    "w": 0,
                    "watch": 0,
                    "watch-only": 0
                  },
                  "boolean": [
                    "w",
                    "watch",
                    "watch-only",
                    "A",
                    "all-namespaces",
                    "ignore-not-found",
                    "no-headers",
                    "i",
                    "it",
                    "ti",
                    "stdin",
                    "t",
                    "tty",
                    "R",
                    "recursive",
                    "server-print",
                    "show-kind",
                    "show-labels"
                  ]
                },
                "plugin": "plugin-kubectl"
              },
              "execType": 0,
              "execUUID": "cf443d70-6f51-4082-b5b7-a25400c471d7",
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "de3f43f1-61ec-4826-94b4-86296cdd72f1",
                "history": 251,
                "env": {}
              }
            },
            "completeEvent": {
              "execType": 0,
              "completeTime": 1606173003495,
              "command": "kubectl create ns kui-notebook-3",
              "argvNoOptions": ["kubectl", "create", "ns", "kui-notebook-3"],
              "parsedOptions": {
                "_": ["kubectl", "create", "ns", "kui-notebook-3"]
              },
              "execUUID": "cf443d70-6f51-4082-b5b7-a25400c471d7",
              "cancelled": false,
              "evaluatorOptions": {
                "plugin": "plugin-kubectl"
              },
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "de3f43f1-61ec-4826-94b4-86296cdd72f1",
                "history": 251,
                "env": {}
              },
              "response": {
                "header": {
                  "key": "NAME",
                  "name": "Name",
                  "attributes": [
                    {
                      "key": "KIND",
                      "value": "Kind",
                      "outerCSS": ""
                    },
                    {
                      "key": "STATUS",
                      "value": "Status",
                      "outerCSS": ""
                    }
                  ]
                },
                "body": [
                  {
                    "name": "kui-notebook-3",
                    "onclick": {
                      "startEvent": {
                        "route": "/kubeui/kubectl/get/ns",
                        "startTime": 1606173120590,
                        "command": "kubectl get ns -n default kui-notebook-3 -o yaml",
                        "evaluatorOptions": {
                          "flags": {
                            "configuration": {
                              "short-option-groups": false,
                              "duplicate-arguments-array": false
                            },
                            "narg": {
                              "w": 0,
                              "watch": 0,
                              "watch-only": 0
                            },
                            "boolean": [
                              "w",
                              "watch",
                              "watch-only",
                              "A",
                              "all-namespaces",
                              "ignore-not-found",
                              "no-headers",
                              "i",
                              "it",
                              "ti",
                              "stdin",
                              "t",
                              "tty",
                              "R",
                              "recursive",
                              "server-print",
                              "show-kind",
                              "show-labels"
                            ]
                          },
                          "plugin": "plugin-kubectl"
                        },
                        "execType": 1,
                        "execUUID": "ff990de2-d668-4bb5-b39b-f0b136391aef",
                        "execOptions": {
                          "echo": true,
                          "type": 1,
                          "execUUID": "ff990de2-d668-4bb5-b39b-f0b136391aef",
                          "history": 250,
                          "env": {}
                        },
                        "echo": true
                      },
                      "completeEvent": {
                        "execType": 1,
                        "completeTime": 1606173121223,
                        "command": "kubectl get ns -n default kui-notebook-3 -o yaml",
                        "argvNoOptions": ["kubectl", "get", "ns", "kui-notebook-3"],
                        "parsedOptions": {
                          "_": ["kubectl", "get", "ns", "kui-notebook-3"],
                          "n": "default",
                          "o": "yaml"
                        },
                        "execUUID": "ff990de2-d668-4bb5-b39b-f0b136391aef",
                        "cancelled": false,
                        "echo": true,
                        "evaluatorOptions": {
                          "flags": {
                            "configuration": {
                              "short-option-groups": false,
                              "duplicate-arguments-array": false
                            },
                            "narg": {
                              "w": 0,
                              "watch": 0,
                              "watch-only": 0
                            },
                            "boolean": [
                              "w",
                              "watch",
                              "watch-only",
                              "A",
                              "all-namespaces",
                              "ignore-not-found",
                              "no-headers",
                              "i",
                              "it",
                              "ti",
                              "stdin",
                              "t",
                              "tty",
                              "R",
                              "recursive",
                              "server-print",
                              "show-kind",
                              "show-labels"
                            ]
                          },
                          "plugin": "plugin-kubectl"
                        },
                        "execOptions": {
                          "echo": true,
                          "type": 1,
                          "execUUID": "ff990de2-d668-4bb5-b39b-f0b136391aef",
                          "history": 250,
                          "env": {}
                        },
                        "response": {
                          "apiVersion": "v1",
                          "kind": "Namespace",
                          "metadata": {
                            "creationTimestamp": "2020-11-23T23:10:03Z",
                            "managedFields": [
                              {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                  "f:status": {
                                    "f:phase": {}
                                  }
                                },
                                "manager": "kubectl-create",
                                "operation": "Update",
                                "time": "2020-11-23T23:10:03Z"
                              }
                            ],
                            "name": "kui-notebook-3",
                            "resourceVersion": "14147",
                            "selfLink": "/api/v1/namespaces/kui-notebook-3",
                            "uid": "c58e3aad-7321-4afb-8ce4-47707a3c9e60"
                          },
                          "spec": {
                            "finalizers": ["kubernetes"]
                          },
                          "status": {
                            "phase": "Active"
                          },
                          "isKubeResource": true,
                          "originatingCommand": {
                            "REPL": {},
                            "argv": ["kubectl", "get", "ns", "-n", "default", "kui-notebook-3", "-o", "yaml"],
                            "command": "kubectl get ns -n default kui-notebook-3 -o yaml",
                            "execOptions": {
                              "echo": true,
                              "type": 1,
                              "execUUID": "ff990de2-d668-4bb5-b39b-f0b136391aef",
                              "history": 250,
                              "env": {}
                            },
                            "argvNoOptions": ["kubectl", "get", "ns", "kui-notebook-3"],
                            "parsedOptions": {
                              "_": ["kubectl", "get", "ns", "kui-notebook-3"],
                              "n": "default",
                              "o": "yaml"
                            }
                          },
                          "kuiRawData": "apiVersion: v1\nkind: Namespace\nmetadata:\n  creationTimestamp: \"2020-11-23T23:10:03Z\"\n  managedFields:\n  - apiVersion: v1\n    fieldsType: FieldsV1\n    fieldsV1:\n      f:status:\n        f:phase: {}\n    manager: kubectl-create\n    operation: Update\n    time: \"2020-11-23T23:10:03Z\"\n  name: kui-notebook-3\n  resourceVersion: \"14147\"\n  selfLink: /api/v1/namespaces/kui-notebook-3\n  uid: c58e3aad-7321-4afb-8ce4-47707a3c9e60\nspec:\n  finalizers:\n  - kubernetes\nstatus:\n  phase: Active\n",
                          "toolbarText": {
                            "type": "info",
                            "text": "Created on **11/23/2020, 6:10:03 PM**. Version **14147**."
                          },
                          "onclick": {
                            "kind": "kubectl get Namespace -n undefined",
                            "name": "kubectl get Namespace -n undefined kui-notebook-3"
                          },
                          "modes": []
                        },
                        "responseType": "MultiModalResponse",
                        "historyIdx": 250
                      }
                    },
                    "onclickIdempotent": true,
                    "attributes": [
                      {
                        "key": "KIND",
                        "value": "ns",
                        "outerCSS": "",
                        "css": ""
                      },
                      {
                        "key": "STATUS",
                        "tag": "badge",
                        "value": "Active",
                        "outerCSS": "",
                        "css": "green-background"
                      }
                    ],
                    "key": "NAME"
                  }
                ]
              },
              "responseType": "ScalarResponse",
              "historyIdx": 251
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "cf443d70-6f51-4082-b5b7-a25400c471d7",
            "startTime": 1606173003173,
            "outputOnly": false,
            "state": "valid-response"
          }
        ]
      },
      {
        "uuid": "1_8205f6b8-87bf-5679-ac83-e3519c17d89c",
        "blocks": [
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "# About the Application:\n\n### This application consists of the following components:\n\n- A single-instance Redis master to store guestbook entries\n- Multiple replicated Redis instances to serve reads\n- Multiple web frontend instances\n\n### By executing the following command, you can\n- view the source code in the sources tab\n- preview the deployment in the dry run tab\n- apply the deployement by clicking the `Apply` button"
              }
            },
            "historyIdx": 26,
            "cwd": "~/Workspace8/kui",
            "command": "# # About the Application:\\n\\n### This application consists of the following components:\\n\\n- A single-instance Redis master to store guestbook entries\\n- Multiple replicated Redis instances to serve reads\\n- Multiple web frontend instances\\n\\n### By executing the following command, you can\\n- view the source code in the sources tab\\n- preview the deployment in the dry run tab\\n- apply the deployement by clicking the `Apply` button",
            "startEvent": {
              "route": "/#",
              "startTime": 1606173914327,
              "command": "# # About the Application:\\n\\n### This application consists of the following components:\\n\\n- A single-instance Redis master to store guestbook entries\\n- Multiple replicated Redis instances to serve reads\\n- Multiple web frontend instances\\n\\n### By executing the following command, you can\\n- view the source code in the sources tab\\n- preview the deployment in the dry run tab\\n- apply the deployement by clicking the `Apply` button",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 0,
              "execUUID": "bf7e2318-473f-404a-99b1-07363b0b181b",
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "bf7e2318-473f-404a-99b1-07363b0b181b",
                "history": 26,
                "env": {}
              }
            },
            "completeEvent": {
              "execType": 0,
              "completeTime": 1606173914337,
              "command": "# # About the Application:\\n\\n### This application consists of the following components:\\n\\n- A single-instance Redis master to store guestbook entries\\n- Multiple replicated Redis instances to serve reads\\n- Multiple web frontend instances\\n\\n### By executing the following command, you can\\n- view the source code in the sources tab\\n- preview the deployment in the dry run tab\\n- apply the deployement by clicking the `Apply` button",
              "argvNoOptions": ["#"],
              "parsedOptions": {
                "_": ["#"]
              },
              "execUUID": "bf7e2318-473f-404a-99b1-07363b0b181b",
              "cancelled": false,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "bf7e2318-473f-404a-99b1-07363b0b181b",
                "history": 26,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "# About the Application:\n\n### This application consists of the following components:\n\n- A single-instance Redis master to store guestbook entries\n- Multiple replicated Redis instances to serve reads\n- Multiple web frontend instances\n\n### By executing the following command, you can\n- view the source code in the sources tab\n- preview the deployment in the dry run tab\n- apply the deployement by clicking the `Apply` button"
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 26
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "bf7e2318-473f-404a-99b1-07363b0b181b",
            "startTime": 1606173914327,
            "outputOnly": true,
            "state": "valid-response"
          },
          {
            "response": {
              "kind": "Resources",
              "metadata": {
                "name": "guestbook",
                "namespace": "kui-notebook-3"
              },
              "onclick": {
                "kind": "open plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
                "name": "open plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
                "namespace": "kubectl get ns kui-notebook-3 -o yaml"
              },
              "defaultMode": "sources",
              "modes": [
                {
                  "mode": "sources",
                  "label": "Sources",
                  "content": {
                    "apiVersion": "kui-shell/v1",
                    "kind": "TreeResponse",
                    "data": [
                      {
                        "name": "All Resources",
                        "id": "All Resources",
                        "extends": {
                          "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                          "name": ["frontend", "frontend", "redis-master", "redis-master", "redis-slave", "redis-slave"]
                        },
                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                        "contentType": "yaml",
                        "defaultExpanded": true,
                        "children": [
                          {
                            "id": "Tiers",
                            "name": "Tiers",
                            "hasBadge": true,
                            "defaultExpanded": true,
                            "extends": {
                              "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                              "name": [
                                "frontend",
                                "frontend",
                                "redis-master",
                                "redis-master",
                                "redis-slave",
                                "redis-slave"
                              ]
                            },
                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                            "contentType": "yaml",
                            "children": [
                              {
                                "id": "Frontend",
                                "name": "Frontend",
                                "hasBadge": false,
                                "defaultExpanded": false,
                                "extends": {
                                  "kind": ["Deployment", "Service"],
                                  "name": ["frontend", "frontend"]
                                },
                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                "contentType": "yaml",
                                "children": [
                                  {
                                    "id": "Apps",
                                    "name": "Apps",
                                    "hasBadge": true,
                                    "defaultExpanded": true,
                                    "extends": {
                                      "kind": ["Deployment", "Service"],
                                      "name": ["frontend", "frontend"]
                                    },
                                    "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                    "contentType": "yaml",
                                    "children": [
                                      {
                                        "id": "Guestbook",
                                        "name": "Guestbook",
                                        "hasBadge": false,
                                        "defaultExpanded": false,
                                        "extends": {
                                          "kind": ["Deployment", "Service"],
                                          "name": ["frontend", "frontend"]
                                        },
                                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                        "contentType": "yaml",
                                        "children": [
                                          {
                                            "id": "Deployment",
                                            "name": "Deployment",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Deployment"],
                                              "name": ["frontend"]
                                            },
                                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Frontend2",
                                                "name": "Frontend",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["frontend"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          },
                                          {
                                            "id": "Service",
                                            "name": "Service",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Service"],
                                              "name": ["frontend"]
                                            },
                                            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Frontend3",
                                                "name": "Frontend",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["frontend"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "id": "Backend",
                                "name": "Backend",
                                "hasBadge": false,
                                "defaultExpanded": false,
                                "extends": {
                                  "kind": ["Deployment", "Service", "Deployment", "Service"],
                                  "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                },
                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                "contentType": "yaml",
                                "children": [
                                  {
                                    "id": "Apps2",
                                    "name": "Apps",
                                    "hasBadge": true,
                                    "defaultExpanded": true,
                                    "extends": {
                                      "kind": ["Deployment", "Service", "Deployment", "Service"],
                                      "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                    },
                                    "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                    "contentType": "yaml",
                                    "children": [
                                      {
                                        "id": "Redis",
                                        "name": "Redis",
                                        "hasBadge": false,
                                        "defaultExpanded": false,
                                        "extends": {
                                          "kind": ["Deployment", "Service", "Deployment", "Service"],
                                          "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                        },
                                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                        "contentType": "yaml",
                                        "children": [
                                          {
                                            "id": "Deployment2",
                                            "name": "Deployment",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Deployment", "Deployment"],
                                              "name": ["redis-master", "redis-slave"]
                                            },
                                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Redis-Master",
                                                "name": "Redis-Master",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["redis-master"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n",
                                                "contentType": "yaml"
                                              },
                                              {
                                                "id": "Redis-Slave",
                                                "name": "Redis-Slave",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["redis-slave"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          },
                                          {
                                            "id": "Service2",
                                            "name": "Service",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Service", "Service"],
                                              "name": ["redis-master", "redis-slave"]
                                            },
                                            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Redis-Master2",
                                                "name": "Redis-Master",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["redis-master"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n",
                                                "contentType": "yaml"
                                              },
                                              {
                                                "id": "Redis-Slave2",
                                                "name": "Redis-Slave",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["redis-slave"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "toolbarText": {
                      "type": "info",
                      "text": "Showing source code. Status: **Offline**"
                    }
                  }
                },
                {
                  "mode": "dry run",
                  "defaultMode": true,
                  "label": "Dry Run",
                  "content": {
                    "apiVersion": "kui-shell/v1",
                    "kind": "TreeResponse",
                    "data": [
                      {
                        "name": "All Resources",
                        "id": "All Resources",
                        "extends": {
                          "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                          "name": ["frontend", "frontend", "redis-master", "redis-master", "redis-slave", "redis-slave"]
                        },
                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                        "contentType": "yaml",
                        "defaultExpanded": true,
                        "children": [
                          {
                            "id": "Tiers",
                            "name": "Tiers",
                            "hasBadge": true,
                            "defaultExpanded": true,
                            "extends": {
                              "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                              "name": [
                                "frontend",
                                "frontend",
                                "redis-master",
                                "redis-master",
                                "redis-slave",
                                "redis-slave"
                              ]
                            },
                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                            "contentType": "yaml",
                            "children": [
                              {
                                "id": "Frontend",
                                "name": "Frontend",
                                "hasBadge": false,
                                "defaultExpanded": false,
                                "extends": {
                                  "kind": ["Deployment", "Service"],
                                  "name": ["frontend", "frontend"]
                                },
                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                "contentType": "yaml",
                                "children": [
                                  {
                                    "id": "Apps",
                                    "name": "Apps",
                                    "hasBadge": true,
                                    "defaultExpanded": true,
                                    "extends": {
                                      "kind": ["Deployment", "Service"],
                                      "name": ["frontend", "frontend"]
                                    },
                                    "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                    "contentType": "yaml",
                                    "children": [
                                      {
                                        "id": "Guestbook",
                                        "name": "Guestbook",
                                        "hasBadge": false,
                                        "defaultExpanded": false,
                                        "extends": {
                                          "kind": ["Deployment", "Service"],
                                          "name": ["frontend", "frontend"]
                                        },
                                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                        "contentType": "yaml",
                                        "children": [
                                          {
                                            "id": "Deployment",
                                            "name": "Deployment",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Deployment"],
                                              "name": ["frontend"]
                                            },
                                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Frontend2",
                                                "name": "Frontend",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["frontend"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          },
                                          {
                                            "id": "Service",
                                            "name": "Service",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Service"],
                                              "name": ["frontend"]
                                            },
                                            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Frontend3",
                                                "name": "Frontend",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["frontend"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "id": "Backend",
                                "name": "Backend",
                                "hasBadge": false,
                                "defaultExpanded": false,
                                "extends": {
                                  "kind": ["Deployment", "Service", "Deployment", "Service"],
                                  "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                },
                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                "contentType": "yaml",
                                "children": [
                                  {
                                    "id": "Apps2",
                                    "name": "Apps",
                                    "hasBadge": true,
                                    "defaultExpanded": true,
                                    "extends": {
                                      "kind": ["Deployment", "Service", "Deployment", "Service"],
                                      "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                    },
                                    "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                    "contentType": "yaml",
                                    "children": [
                                      {
                                        "id": "Redis",
                                        "name": "Redis",
                                        "hasBadge": false,
                                        "defaultExpanded": false,
                                        "extends": {
                                          "kind": ["Deployment", "Service", "Deployment", "Service"],
                                          "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                        },
                                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                        "contentType": "yaml",
                                        "children": [
                                          {
                                            "id": "Deployment2",
                                            "name": "Deployment",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Deployment", "Deployment"],
                                              "name": ["redis-master", "redis-slave"]
                                            },
                                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Redis-Master",
                                                "name": "Redis-Master",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["redis-master"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n",
                                                "contentType": "yaml"
                                              },
                                              {
                                                "id": "Redis-Slave",
                                                "name": "Redis-Slave",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["redis-slave"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          },
                                          {
                                            "id": "Service2",
                                            "name": "Service",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Service", "Service"],
                                              "name": ["redis-master", "redis-slave"]
                                            },
                                            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Redis-Master2",
                                                "name": "Redis-Master",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["redis-master"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                "contentType": "yaml"
                                              },
                                              {
                                                "id": "Redis-Slave2",
                                                "name": "Redis-Slave",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["redis-slave"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "toolbarText": {
                      "type": "info",
                      "text": "Previewing the changes that will be applied. Status: **Offline**"
                    }
                  }
                },
                {
                  "mode": "apply",
                  "label": "Apply",
                  "kind": "drilldown",
                  "command": "kubectl apply -n kui-notebook-3 -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/"
                }
              ]
            },
            "historyIdx": 252,
            "cwd": "~/Workspace8/kui",
            "command": "kubectl get -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/ -n kui-notebook-3",
            "startEvent": {
              "route": "/kubeui/kubectl/get",
              "startTime": 1606173090661,
              "command": "kubectl get -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/ -n kui-notebook-3",
              "evaluatorOptions": {
                "flags": {
                  "configuration": {
                    "short-option-groups": false,
                    "duplicate-arguments-array": false
                  },
                  "narg": {
                    "w": 0,
                    "watch": 0,
                    "watch-only": 0
                  },
                  "boolean": [
                    "w",
                    "watch",
                    "watch-only",
                    "A",
                    "all-namespaces",
                    "ignore-not-found",
                    "no-headers",
                    "i",
                    "it",
                    "ti",
                    "stdin",
                    "t",
                    "tty",
                    "R",
                    "recursive",
                    "server-print",
                    "show-kind",
                    "show-labels"
                  ]
                },
                "plugin": "plugin-kubectl"
              },
              "execType": 0,
              "execUUID": "24952e95-f542-4249-a7ce-c9e89bf13ae7",
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "49907fe0-83e5-4a31-be6f-e5163bf69f2e",
                "history": 252,
                "env": {}
              }
            },
            "completeEvent": {
              "execType": 0,
              "completeTime": 1606173092173,
              "command": "kubectl get -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/ -n kui-notebook-3",
              "argvNoOptions": ["kubectl", "get"],
              "parsedOptions": {
                "_": ["kubectl", "get"],
                "f": "plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
                "n": "kui-notebook-3",
                "o": "yaml"
              },
              "execUUID": "24952e95-f542-4249-a7ce-c9e89bf13ae7",
              "cancelled": false,
              "evaluatorOptions": {
                "plugin": "plugin-kubectl"
              },
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "49907fe0-83e5-4a31-be6f-e5163bf69f2e",
                "history": 252,
                "env": {}
              },
              "response": {
                "kind": "Resources",
                "metadata": {
                  "name": "guestbook",
                  "namespace": "kui-notebook-3"
                },
                "onclick": {
                  "kind": "open plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
                  "name": "open plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
                  "namespace": "kubectl get ns kui-notebook-3 -o yaml"
                },
                "defaultMode": "sources",
                "modes": [
                  {
                    "mode": "sources",
                    "label": "Sources",
                    "content": {
                      "apiVersion": "kui-shell/v1",
                      "kind": "TreeResponse",
                      "data": [
                        {
                          "name": "All Resources",
                          "id": "All Resources",
                          "extends": {
                            "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                            "name": [
                              "frontend",
                              "frontend",
                              "redis-master",
                              "redis-master",
                              "redis-slave",
                              "redis-slave"
                            ]
                          },
                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                          "contentType": "yaml",
                          "defaultExpanded": true,
                          "children": [
                            {
                              "id": "Tiers",
                              "name": "Tiers",
                              "hasBadge": true,
                              "defaultExpanded": true,
                              "extends": {
                                "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                                "name": [
                                  "frontend",
                                  "frontend",
                                  "redis-master",
                                  "redis-master",
                                  "redis-slave",
                                  "redis-slave"
                                ]
                              },
                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                              "contentType": "yaml",
                              "children": [
                                {
                                  "id": "Frontend",
                                  "name": "Frontend",
                                  "hasBadge": false,
                                  "defaultExpanded": false,
                                  "extends": {
                                    "kind": ["Deployment", "Service"],
                                    "name": ["frontend", "frontend"]
                                  },
                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                  "contentType": "yaml",
                                  "children": [
                                    {
                                      "id": "Apps",
                                      "name": "Apps",
                                      "hasBadge": true,
                                      "defaultExpanded": true,
                                      "extends": {
                                        "kind": ["Deployment", "Service"],
                                        "name": ["frontend", "frontend"]
                                      },
                                      "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                      "contentType": "yaml",
                                      "children": [
                                        {
                                          "id": "Guestbook",
                                          "name": "Guestbook",
                                          "hasBadge": false,
                                          "defaultExpanded": false,
                                          "extends": {
                                            "kind": ["Deployment", "Service"],
                                            "name": ["frontend", "frontend"]
                                          },
                                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                          "contentType": "yaml",
                                          "children": [
                                            {
                                              "id": "Deployment",
                                              "name": "Deployment",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Deployment"],
                                                "name": ["frontend"]
                                              },
                                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Frontend2",
                                                  "name": "Frontend",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["frontend"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            },
                                            {
                                              "id": "Service",
                                              "name": "Service",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Service"],
                                                "name": ["frontend"]
                                              },
                                              "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Frontend3",
                                                  "name": "Frontend",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["frontend"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "id": "Backend",
                                  "name": "Backend",
                                  "hasBadge": false,
                                  "defaultExpanded": false,
                                  "extends": {
                                    "kind": ["Deployment", "Service", "Deployment", "Service"],
                                    "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                  },
                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                  "contentType": "yaml",
                                  "children": [
                                    {
                                      "id": "Apps2",
                                      "name": "Apps",
                                      "hasBadge": true,
                                      "defaultExpanded": true,
                                      "extends": {
                                        "kind": ["Deployment", "Service", "Deployment", "Service"],
                                        "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                      },
                                      "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                      "contentType": "yaml",
                                      "children": [
                                        {
                                          "id": "Redis",
                                          "name": "Redis",
                                          "hasBadge": false,
                                          "defaultExpanded": false,
                                          "extends": {
                                            "kind": ["Deployment", "Service", "Deployment", "Service"],
                                            "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                          },
                                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                          "contentType": "yaml",
                                          "children": [
                                            {
                                              "id": "Deployment2",
                                              "name": "Deployment",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Deployment", "Deployment"],
                                                "name": ["redis-master", "redis-slave"]
                                              },
                                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Redis-Master",
                                                  "name": "Redis-Master",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["redis-master"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n",
                                                  "contentType": "yaml"
                                                },
                                                {
                                                  "id": "Redis-Slave",
                                                  "name": "Redis-Slave",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["redis-slave"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            },
                                            {
                                              "id": "Service2",
                                              "name": "Service",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Service", "Service"],
                                                "name": ["redis-master", "redis-slave"]
                                              },
                                              "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Redis-Master2",
                                                  "name": "Redis-Master",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["redis-master"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n",
                                                  "contentType": "yaml"
                                                },
                                                {
                                                  "id": "Redis-Slave2",
                                                  "name": "Redis-Slave",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["redis-slave"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "toolbarText": {
                        "type": "info",
                        "text": "Showing source code. Status: **Offline**"
                      }
                    }
                  },
                  {
                    "mode": "dry run",
                    "defaultMode": true,
                    "label": "Dry Run",
                    "content": {
                      "apiVersion": "kui-shell/v1",
                      "kind": "TreeResponse",
                      "data": [
                        {
                          "name": "All Resources",
                          "id": "All Resources",
                          "extends": {
                            "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                            "name": [
                              "frontend",
                              "frontend",
                              "redis-master",
                              "redis-master",
                              "redis-slave",
                              "redis-slave"
                            ]
                          },
                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                          "contentType": "yaml",
                          "defaultExpanded": true,
                          "children": [
                            {
                              "id": "Tiers",
                              "name": "Tiers",
                              "hasBadge": true,
                              "defaultExpanded": true,
                              "extends": {
                                "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                                "name": [
                                  "frontend",
                                  "frontend",
                                  "redis-master",
                                  "redis-master",
                                  "redis-slave",
                                  "redis-slave"
                                ]
                              },
                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                              "contentType": "yaml",
                              "children": [
                                {
                                  "id": "Frontend",
                                  "name": "Frontend",
                                  "hasBadge": false,
                                  "defaultExpanded": false,
                                  "extends": {
                                    "kind": ["Deployment", "Service"],
                                    "name": ["frontend", "frontend"]
                                  },
                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                  "contentType": "yaml",
                                  "children": [
                                    {
                                      "id": "Apps",
                                      "name": "Apps",
                                      "hasBadge": true,
                                      "defaultExpanded": true,
                                      "extends": {
                                        "kind": ["Deployment", "Service"],
                                        "name": ["frontend", "frontend"]
                                      },
                                      "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                      "contentType": "yaml",
                                      "children": [
                                        {
                                          "id": "Guestbook",
                                          "name": "Guestbook",
                                          "hasBadge": false,
                                          "defaultExpanded": false,
                                          "extends": {
                                            "kind": ["Deployment", "Service"],
                                            "name": ["frontend", "frontend"]
                                          },
                                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                          "contentType": "yaml",
                                          "children": [
                                            {
                                              "id": "Deployment",
                                              "name": "Deployment",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Deployment"],
                                                "name": ["frontend"]
                                              },
                                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Frontend2",
                                                  "name": "Frontend",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["frontend"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 8841e38e-bad5-4c7e-abf3-8fde8b6f2447\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            },
                                            {
                                              "id": "Service",
                                              "name": "Service",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Service"],
                                                "name": ["frontend"]
                                              },
                                              "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Frontend3",
                                                  "name": "Frontend",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["frontend"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: frontend\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: 8c2e5d88-0507-4446-bc41-6999171b4bdc\nspec:\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32769\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "id": "Backend",
                                  "name": "Backend",
                                  "hasBadge": false,
                                  "defaultExpanded": false,
                                  "extends": {
                                    "kind": ["Deployment", "Service", "Deployment", "Service"],
                                    "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                  },
                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                  "contentType": "yaml",
                                  "children": [
                                    {
                                      "id": "Apps2",
                                      "name": "Apps",
                                      "hasBadge": true,
                                      "defaultExpanded": true,
                                      "extends": {
                                        "kind": ["Deployment", "Service", "Deployment", "Service"],
                                        "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                      },
                                      "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                      "contentType": "yaml",
                                      "children": [
                                        {
                                          "id": "Redis",
                                          "name": "Redis",
                                          "hasBadge": false,
                                          "defaultExpanded": false,
                                          "extends": {
                                            "kind": ["Deployment", "Service", "Deployment", "Service"],
                                            "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                          },
                                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                          "contentType": "yaml",
                                          "children": [
                                            {
                                              "id": "Deployment2",
                                              "name": "Deployment",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Deployment", "Deployment"],
                                                "name": ["redis-master", "redis-slave"]
                                              },
                                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Redis-Master",
                                                  "name": "Redis-Master",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["redis-master"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: 7163df13-c56e-4303-8bf0-fdaca8774f71\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n",
                                                  "contentType": "yaml"
                                                },
                                                {
                                                  "id": "Redis-Slave",
                                                  "name": "Redis-Slave",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["redis-slave"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 50ee2efe-2af2-444f-838d-6441e321a51d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus: {}\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            },
                                            {
                                              "id": "Service2",
                                              "name": "Service",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Service", "Service"],
                                                "name": ["redis-master", "redis-slave"]
                                              },
                                              "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Redis-Master2",
                                                  "name": "Redis-Master",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["redis-master"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:31Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:31Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: 123a4735-fd0b-4a79-99b8-1ec43921f061\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                  "contentType": "yaml"
                                                },
                                                {
                                                  "id": "Redis-Slave2",
                                                  "name": "Redis-Slave",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["redis-slave"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:11:32Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:11:32Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 302e01c8-38aa-44d3-9f27-f9a569e04c1c\nspec:\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "toolbarText": {
                        "type": "info",
                        "text": "Previewing the changes that will be applied. Status: **Offline**"
                      }
                    }
                  },
                  {
                    "mode": "apply",
                    "label": "Apply",
                    "kind": "drilldown",
                    "command": "kubectl apply -n kui-notebook-3 -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/"
                  }
                ]
              },
              "responseType": "MultiModalResponse",
              "historyIdx": 252
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "24952e95-f542-4249-a7ce-c9e89bf13ae7",
            "startTime": 1606173090661,
            "outputOnly": false,
            "state": "valid-response"
          },
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "# Deploy the Application\n\nClick the `Apply Button` in the view above to apply this application."
              }
            },
            "historyIdx": 251,
            "cwd": "~/Workspace8/kui",
            "command": "# # Deploy the Application\\n\\nClick the `Apply Button` in the view above to apply this application.",
            "startEvent": {
              "route": "/#",
              "startTime": 1606173596668,
              "command": "# # Deploy the Application\\n\\nClick the `Apply Button` in the view above to apply this application.",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 0,
              "execUUID": "94bbd490-014e-41da-925a-c74af3677e49",
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "f741ea75-410c-40fa-89eb-fe1bad6f7fbc",
                "history": 251,
                "env": {}
              }
            },
            "completeEvent": {
              "execType": 0,
              "completeTime": 1606173596701,
              "command": "# # Deploy the Application\\n\\nClick the `Apply Button` in the view above to apply this application.",
              "argvNoOptions": ["#", "  #Deploy the application"],
              "parsedOptions": {
                "_": ["#", "  #Deploy the application"]
              },
              "execUUID": "94bbd490-014e-41da-925a-c74af3677e49",
              "cancelled": false,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "f741ea75-410c-40fa-89eb-fe1bad6f7fbc",
                "history": 251,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "# Deploy the Application\n\nClick the `Apply Button` in the view above to apply this application."
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 251
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "94bbd490-014e-41da-925a-c74af3677e49",
            "startTime": 1606173596668,
            "outputOnly": true,
            "state": "valid-response"
          },
          {
            "response": "deployment.apps/frontend created\nservice/frontend created\ndeployment.apps/redis-master created\nservice/redis-master created\ndeployment.apps/redis-slave created\nservice/redis-slave created\n",
            "historyIdx": 252,
            "cwd": "~/Workspace8/kui",
            "command": "kubectl apply -n kui-notebook-3 -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
            "startEvent": {
              "route": "/kubeui/kubectl/apply",
              "startTime": 1606173657036,
              "command": "kubectl apply -n kui-notebook-3 -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
              "evaluatorOptions": {
                "flags": {
                  "configuration": {
                    "short-option-groups": false,
                    "duplicate-arguments-array": false
                  },
                  "narg": {
                    "w": 0,
                    "watch": 0,
                    "watch-only": 0
                  },
                  "boolean": [
                    "w",
                    "watch",
                    "watch-only",
                    "A",
                    "all-namespaces",
                    "ignore-not-found",
                    "no-headers",
                    "i",
                    "it",
                    "ti",
                    "stdin",
                    "t",
                    "tty",
                    "R",
                    "recursive",
                    "server-print",
                    "show-kind",
                    "show-labels"
                  ]
                },
                "plugin": "plugin-kubectl"
              },
              "execType": 1,
              "execUUID": "864ff8fe-e4ad-46cf-9e47-0ca7cc367b0a",
              "execOptions": {
                "echo": true,
                "type": 1,
                "execUUID": "2d98c8e2-191c-4997-a886-62da2bc791f2",
                "history": 252,
                "env": {}
              },
              "echo": true
            },
            "completeEvent": {
              "execType": 1,
              "completeTime": 1606173658814,
              "command": "kubectl apply -n kui-notebook-3 -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
              "argvNoOptions": ["kubectl", "apply"],
              "parsedOptions": {
                "_": ["kubectl", "apply"],
                "n": "kui-notebook-3",
                "f": "plugins/plugin-kubectl/tests/data/k8s/application/guestbook/"
              },
              "execUUID": "864ff8fe-e4ad-46cf-9e47-0ca7cc367b0a",
              "cancelled": false,
              "echo": true,
              "evaluatorOptions": {
                "plugin": "plugin-kubectl"
              },
              "execOptions": {
                "echo": true,
                "type": 1,
                "execUUID": "2d98c8e2-191c-4997-a886-62da2bc791f2",
                "history": 252,
                "env": {}
              },
              "response": "deployment.apps/frontend created\nservice/frontend created\ndeployment.apps/redis-master created\nservice/redis-master created\ndeployment.apps/redis-slave created\nservice/redis-slave created\n",
              "responseType": "ScalarResponse",
              "historyIdx": 252
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "864ff8fe-e4ad-46cf-9e47-0ca7cc367b0a",
            "startTime": 1606173657036,
            "outputOnly": false,
            "state": "valid-response"
          },
          {
            "response": {
              "apiVersion": "kui-shell/v1",
              "kind": "CommentaryResponse",
              "props": {
                "children": "# Inspect the Deployement\n\nBy re-executing the `get -f` command, you can inspect the deployment result with events recorded."
              }
            },
            "historyIdx": 253,
            "cwd": "~/Workspace8/kui",
            "command": "# # Inspect the Deployement\\n\\nBy re-executing the `get -f` command, you can inspect the deployment result with events recorded.",
            "startEvent": {
              "route": "/#",
              "startTime": 1606173680149,
              "command": "# # Inspect the Deployement\\n\\nBy re-executing the `get -f` command, you can inspect the deployment result with events recorded.",
              "evaluatorOptions": {
                "usage": {
                  "command": "commentary",
                  "strict": "commentary",
                  "example": "commentary -f [<markdown file path>]",
                  "docs": "Commentary",
                  "optional": [
                    {
                      "name": "--title",
                      "alias": "-t",
                      "docs": "Title for the commentary"
                    },
                    {
                      "name": "--file",
                      "alias": "-f",
                      "docs": "File that contains the texts"
                    }
                  ]
                },
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execType": 0,
              "execUUID": "0572e752-bffa-4073-87cf-5e03e12e8856",
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "15582918-344c-4e12-a79f-57561098514a",
                "history": 253,
                "env": {}
              }
            },
            "completeEvent": {
              "execType": 0,
              "completeTime": 1606173680162,
              "command": "# # Inspect the Deployement\\n\\nBy re-executing the `get -f` command, you can inspect the deployment result with events recorded.",
              "argvNoOptions": ["#"],
              "parsedOptions": {
                "_": ["#"]
              },
              "execUUID": "0572e752-bffa-4073-87cf-5e03e12e8856",
              "cancelled": false,
              "evaluatorOptions": {
                "outputOnly": true,
                "plugin": "plugin-client-common"
              },
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "15582918-344c-4e12-a79f-57561098514a",
                "history": 253,
                "env": {}
              },
              "response": {
                "apiVersion": "kui-shell/v1",
                "kind": "CommentaryResponse",
                "props": {
                  "children": "# Inspect the Deployement\n\nBy re-executing the `get -f` command, you can inspect the deployment result with events recorded."
                }
              },
              "responseType": "ScalarResponse",
              "historyIdx": 253
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "0572e752-bffa-4073-87cf-5e03e12e8856",
            "startTime": 1606173680149,
            "outputOnly": true,
            "state": "valid-response"
          },
          {
            "response": {
              "kind": "Resources",
              "metadata": {
                "name": "guestbook",
                "namespace": "kui-notebook-3"
              },
              "onclick": {
                "kind": "open plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
                "name": "open plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
                "namespace": "kubectl get ns kui-notebook-3 -o yaml"
              },
              "defaultMode": "deployed resources",
              "modes": [
                {
                  "mode": "sources",
                  "label": "Sources",
                  "content": {
                    "apiVersion": "kui-shell/v1",
                    "kind": "TreeResponse",
                    "data": [
                      {
                        "name": "All Resources",
                        "id": "All Resources",
                        "extends": {
                          "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                          "name": ["frontend", "frontend", "redis-master", "redis-master", "redis-slave", "redis-slave"]
                        },
                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                        "contentType": "yaml",
                        "defaultExpanded": true,
                        "children": [
                          {
                            "id": "Tiers",
                            "name": "Tiers",
                            "hasBadge": true,
                            "defaultExpanded": true,
                            "extends": {
                              "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                              "name": [
                                "frontend",
                                "frontend",
                                "redis-master",
                                "redis-master",
                                "redis-slave",
                                "redis-slave"
                              ]
                            },
                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                            "contentType": "yaml",
                            "children": [
                              {
                                "id": "Frontend",
                                "name": "Frontend",
                                "hasBadge": false,
                                "defaultExpanded": false,
                                "extends": {
                                  "kind": ["Deployment", "Service"],
                                  "name": ["frontend", "frontend"]
                                },
                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                "contentType": "yaml",
                                "children": [
                                  {
                                    "id": "Apps",
                                    "name": "Apps",
                                    "hasBadge": true,
                                    "defaultExpanded": true,
                                    "extends": {
                                      "kind": ["Deployment", "Service"],
                                      "name": ["frontend", "frontend"]
                                    },
                                    "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                    "contentType": "yaml",
                                    "children": [
                                      {
                                        "id": "Guestbook",
                                        "name": "Guestbook",
                                        "hasBadge": false,
                                        "defaultExpanded": false,
                                        "extends": {
                                          "kind": ["Deployment", "Service"],
                                          "name": ["frontend", "frontend"]
                                        },
                                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                        "contentType": "yaml",
                                        "children": [
                                          {
                                            "id": "Deployment",
                                            "name": "Deployment",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Deployment"],
                                              "name": ["frontend"]
                                            },
                                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Frontend2",
                                                "name": "Frontend",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["frontend"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          },
                                          {
                                            "id": "Service",
                                            "name": "Service",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Service"],
                                              "name": ["frontend"]
                                            },
                                            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Frontend3",
                                                "name": "Frontend",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["frontend"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "id": "Backend",
                                "name": "Backend",
                                "hasBadge": false,
                                "defaultExpanded": false,
                                "extends": {
                                  "kind": ["Deployment", "Service", "Deployment", "Service"],
                                  "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                },
                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                "contentType": "yaml",
                                "children": [
                                  {
                                    "id": "Apps2",
                                    "name": "Apps",
                                    "hasBadge": true,
                                    "defaultExpanded": true,
                                    "extends": {
                                      "kind": ["Deployment", "Service", "Deployment", "Service"],
                                      "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                    },
                                    "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                    "contentType": "yaml",
                                    "children": [
                                      {
                                        "id": "Redis",
                                        "name": "Redis",
                                        "hasBadge": false,
                                        "defaultExpanded": false,
                                        "extends": {
                                          "kind": ["Deployment", "Service", "Deployment", "Service"],
                                          "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                        },
                                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                        "contentType": "yaml",
                                        "children": [
                                          {
                                            "id": "Deployment2",
                                            "name": "Deployment",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Deployment", "Deployment"],
                                              "name": ["redis-master", "redis-slave"]
                                            },
                                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Redis-Master",
                                                "name": "Redis-Master",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["redis-master"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n",
                                                "contentType": "yaml"
                                              },
                                              {
                                                "id": "Redis-Slave",
                                                "name": "Redis-Slave",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["redis-slave"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          },
                                          {
                                            "id": "Service2",
                                            "name": "Service",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Service", "Service"],
                                              "name": ["redis-master", "redis-slave"]
                                            },
                                            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                            "contentType": "yaml",
                                            "children": [
                                              {
                                                "id": "Redis-Master2",
                                                "name": "Redis-Master",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["redis-master"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n",
                                                "contentType": "yaml"
                                              },
                                              {
                                                "id": "Redis-Slave2",
                                                "name": "Redis-Slave",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["redis-slave"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                                "contentType": "yaml"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "toolbarText": {
                      "type": "info",
                      "text": "Showing source code. Status: **Live**"
                    }
                  }
                },
                {
                  "mode": "deployed resources",
                  "label": "Deployed Resources",
                  "content": {
                    "apiVersion": "kui-shell/v1",
                    "kind": "TreeResponse",
                    "data": [
                      {
                        "name": "All Resources",
                        "id": "All Resources",
                        "extends": {
                          "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                          "name": ["frontend", "frontend", "redis-master", "redis-master", "redis-slave", "redis-slave"]
                        },
                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                        "contentType": "yaml",
                        "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                        "eventArgs": {
                          "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                          "schema": {
                            "nCol": 5,
                            "timestampCol": 0,
                            "nameCol": 1,
                            "messageCol": 2,
                            "apiVersionCol": 3,
                            "kindCol": 4
                          }
                        },
                        "defaultExpanded": true,
                        "children": [
                          {
                            "id": "Tiers",
                            "name": "Tiers",
                            "hasBadge": true,
                            "defaultExpanded": true,
                            "extends": {
                              "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                              "name": [
                                "frontend",
                                "frontend",
                                "redis-master",
                                "redis-master",
                                "redis-slave",
                                "redis-slave"
                              ]
                            },
                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                            "contentType": "yaml",
                            "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                            "eventArgs": {
                              "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                              "schema": {
                                "nCol": 5,
                                "timestampCol": 0,
                                "nameCol": 1,
                                "messageCol": 2,
                                "apiVersionCol": 3,
                                "kindCol": 4
                              }
                            },
                            "children": [
                              {
                                "id": "Frontend",
                                "name": "Frontend",
                                "hasBadge": false,
                                "defaultExpanded": false,
                                "extends": {
                                  "kind": ["Deployment", "Service"],
                                  "name": ["frontend", "frontend"]
                                },
                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                "contentType": "yaml",
                                "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                "eventArgs": {
                                  "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                  "schema": {
                                    "nCol": 5,
                                    "timestampCol": 0,
                                    "nameCol": 1,
                                    "messageCol": 2,
                                    "apiVersionCol": 3,
                                    "kindCol": 4
                                  }
                                },
                                "children": [
                                  {
                                    "id": "Apps",
                                    "name": "Apps",
                                    "hasBadge": true,
                                    "defaultExpanded": true,
                                    "extends": {
                                      "kind": ["Deployment", "Service"],
                                      "name": ["frontend", "frontend"]
                                    },
                                    "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                    "contentType": "yaml",
                                    "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                    "eventArgs": {
                                      "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                      "schema": {
                                        "nCol": 5,
                                        "timestampCol": 0,
                                        "nameCol": 1,
                                        "messageCol": 2,
                                        "apiVersionCol": 3,
                                        "kindCol": 4
                                      }
                                    },
                                    "children": [
                                      {
                                        "id": "Guestbook",
                                        "name": "Guestbook",
                                        "hasBadge": false,
                                        "defaultExpanded": false,
                                        "extends": {
                                          "kind": ["Deployment", "Service"],
                                          "name": ["frontend", "frontend"]
                                        },
                                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                        "contentType": "yaml",
                                        "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                        "eventArgs": {
                                          "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                          "schema": {
                                            "nCol": 5,
                                            "timestampCol": 0,
                                            "nameCol": 1,
                                            "messageCol": 2,
                                            "apiVersionCol": 3,
                                            "kindCol": 4
                                          }
                                        },
                                        "children": [
                                          {
                                            "id": "Deployment",
                                            "name": "Deployment",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Deployment"],
                                              "name": ["frontend"]
                                            },
                                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n",
                                            "contentType": "yaml",
                                            "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n",
                                            "eventArgs": {
                                              "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                              "schema": {
                                                "nCol": 5,
                                                "timestampCol": 0,
                                                "nameCol": 1,
                                                "messageCol": 2,
                                                "apiVersionCol": 3,
                                                "kindCol": 4
                                              }
                                            },
                                            "children": [
                                              {
                                                "id": "Frontend2",
                                                "name": "Frontend",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["frontend"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n",
                                                "contentType": "yaml",
                                                "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n",
                                                "eventArgs": {
                                                  "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                  "schema": {
                                                    "nCol": 5,
                                                    "timestampCol": 0,
                                                    "nameCol": 1,
                                                    "messageCol": 2,
                                                    "apiVersionCol": 3,
                                                    "kindCol": 4
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "id": "Service",
                                            "name": "Service",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Service"],
                                              "name": ["frontend"]
                                            },
                                            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                            "contentType": "yaml",
                                            "modifiedContent": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                            "eventArgs": {
                                              "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                              "schema": {
                                                "nCol": 5,
                                                "timestampCol": 0,
                                                "nameCol": 1,
                                                "messageCol": 2,
                                                "apiVersionCol": 3,
                                                "kindCol": 4
                                              }
                                            },
                                            "children": [
                                              {
                                                "id": "Frontend3",
                                                "name": "Frontend",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["frontend"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                                "contentType": "yaml",
                                                "modifiedContent": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                                "eventArgs": {
                                                  "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                  "schema": {
                                                    "nCol": 5,
                                                    "timestampCol": 0,
                                                    "nameCol": 1,
                                                    "messageCol": 2,
                                                    "apiVersionCol": 3,
                                                    "kindCol": 4
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "id": "Backend",
                                "name": "Backend",
                                "hasBadge": false,
                                "defaultExpanded": false,
                                "extends": {
                                  "kind": ["Deployment", "Service", "Deployment", "Service"],
                                  "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                },
                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                "contentType": "yaml",
                                "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                "eventArgs": {
                                  "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                  "schema": {
                                    "nCol": 5,
                                    "timestampCol": 0,
                                    "nameCol": 1,
                                    "messageCol": 2,
                                    "apiVersionCol": 3,
                                    "kindCol": 4
                                  }
                                },
                                "children": [
                                  {
                                    "id": "Apps2",
                                    "name": "Apps",
                                    "hasBadge": true,
                                    "defaultExpanded": true,
                                    "extends": {
                                      "kind": ["Deployment", "Service", "Deployment", "Service"],
                                      "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                    },
                                    "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                    "contentType": "yaml",
                                    "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                    "eventArgs": {
                                      "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                      "schema": {
                                        "nCol": 5,
                                        "timestampCol": 0,
                                        "nameCol": 1,
                                        "messageCol": 2,
                                        "apiVersionCol": 3,
                                        "kindCol": 4
                                      }
                                    },
                                    "children": [
                                      {
                                        "id": "Redis",
                                        "name": "Redis",
                                        "hasBadge": false,
                                        "defaultExpanded": false,
                                        "extends": {
                                          "kind": ["Deployment", "Service", "Deployment", "Service"],
                                          "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                        },
                                        "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                        "contentType": "yaml",
                                        "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                        "eventArgs": {
                                          "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                          "schema": {
                                            "nCol": 5,
                                            "timestampCol": 0,
                                            "nameCol": 1,
                                            "messageCol": 2,
                                            "apiVersionCol": 3,
                                            "kindCol": 4
                                          }
                                        },
                                        "children": [
                                          {
                                            "id": "Deployment2",
                                            "name": "Deployment",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Deployment", "Deployment"],
                                              "name": ["redis-master", "redis-slave"]
                                            },
                                            "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n",
                                            "contentType": "yaml",
                                            "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n",
                                            "eventArgs": {
                                              "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                              "schema": {
                                                "nCol": 5,
                                                "timestampCol": 0,
                                                "nameCol": 1,
                                                "messageCol": 2,
                                                "apiVersionCol": 3,
                                                "kindCol": 4
                                              }
                                            },
                                            "children": [
                                              {
                                                "id": "Redis-Master",
                                                "name": "Redis-Master",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["redis-master"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n",
                                                "contentType": "yaml",
                                                "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n",
                                                "eventArgs": {
                                                  "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                  "schema": {
                                                    "nCol": 5,
                                                    "timestampCol": 0,
                                                    "nameCol": 1,
                                                    "messageCol": 2,
                                                    "apiVersionCol": 3,
                                                    "kindCol": 4
                                                  }
                                                }
                                              },
                                              {
                                                "id": "Redis-Slave",
                                                "name": "Redis-Slave",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Deployment"],
                                                  "name": ["redis-slave"]
                                                },
                                                "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n",
                                                "contentType": "yaml",
                                                "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n",
                                                "eventArgs": {
                                                  "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                  "schema": {
                                                    "nCol": 5,
                                                    "timestampCol": 0,
                                                    "nameCol": 1,
                                                    "messageCol": 2,
                                                    "apiVersionCol": 3,
                                                    "kindCol": 4
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "id": "Service2",
                                            "name": "Service",
                                            "hasBadge": true,
                                            "defaultExpanded": true,
                                            "extends": {
                                              "kind": ["Service", "Service"],
                                              "name": ["redis-master", "redis-slave"]
                                            },
                                            "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                            "contentType": "yaml",
                                            "modifiedContent": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                            "eventArgs": {
                                              "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                              "schema": {
                                                "nCol": 5,
                                                "timestampCol": 0,
                                                "nameCol": 1,
                                                "messageCol": 2,
                                                "apiVersionCol": 3,
                                                "kindCol": 4
                                              }
                                            },
                                            "children": [
                                              {
                                                "id": "Redis-Master2",
                                                "name": "Redis-Master",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["redis-master"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                "contentType": "yaml",
                                                "modifiedContent": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                "eventArgs": {
                                                  "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                  "schema": {
                                                    "nCol": 5,
                                                    "timestampCol": 0,
                                                    "nameCol": 1,
                                                    "messageCol": 2,
                                                    "apiVersionCol": 3,
                                                    "kindCol": 4
                                                  }
                                                }
                                              },
                                              {
                                                "id": "Redis-Slave2",
                                                "name": "Redis-Slave",
                                                "hasBadge": false,
                                                "defaultExpanded": false,
                                                "extends": {
                                                  "kind": ["Service"],
                                                  "name": ["redis-slave"]
                                                },
                                                "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                "contentType": "yaml",
                                                "modifiedContent": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                "eventArgs": {
                                                  "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                  "schema": {
                                                    "nCol": 5,
                                                    "timestampCol": 0,
                                                    "nameCol": 1,
                                                    "messageCol": 2,
                                                    "apiVersionCol": 3,
                                                    "kindCol": 4
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "toolbarText": {
                      "type": "info",
                      "text": "Showing deployed resources"
                    },
                    "toolbarButtons": [
                      {
                        "mode": "apply",
                        "label": "Apply Changes",
                        "kind": "drilldown",
                        "command": "kubectl apply -n kui-notebook-3 -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/"
                      }
                    ]
                  }
                }
              ]
            },
            "historyIdx": 254,
            "cwd": "~/Workspace8/kui",
            "command": "kubectl get -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/ -n kui-notebook-3",
            "startEvent": {
              "route": "/kubeui/kubectl/get",
              "startTime": 1606173714573,
              "command": "kubectl get -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/ -n kui-notebook-3",
              "evaluatorOptions": {
                "flags": {
                  "configuration": {
                    "short-option-groups": false,
                    "duplicate-arguments-array": false
                  },
                  "narg": {
                    "w": 0,
                    "watch": 0,
                    "watch-only": 0
                  },
                  "boolean": [
                    "w",
                    "watch",
                    "watch-only",
                    "A",
                    "all-namespaces",
                    "ignore-not-found",
                    "no-headers",
                    "i",
                    "it",
                    "ti",
                    "stdin",
                    "t",
                    "tty",
                    "R",
                    "recursive",
                    "server-print",
                    "show-kind",
                    "show-labels"
                  ]
                },
                "plugin": "plugin-kubectl"
              },
              "execType": 0,
              "execUUID": "0bcdf427-5e8c-43b0-951f-24f739987fae",
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "bc073b69-6440-4c70-b61c-c8bac9d74f2a",
                "history": 254,
                "env": {}
              }
            },
            "completeEvent": {
              "execType": 0,
              "completeTime": 1606173715610,
              "command": "kubectl get -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/ -n kui-notebook-3",
              "argvNoOptions": ["kubectl", "get"],
              "parsedOptions": {
                "_": ["kubectl", "get"],
                "f": "plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
                "n": "kui-notebook-3",
                "o": "yaml"
              },
              "execUUID": "0bcdf427-5e8c-43b0-951f-24f739987fae",
              "cancelled": false,
              "evaluatorOptions": {
                "plugin": "plugin-kubectl"
              },
              "execOptions": {
                "type": 0,
                "language": "en-US",
                "execUUID": "bc073b69-6440-4c70-b61c-c8bac9d74f2a",
                "history": 254,
                "env": {}
              },
              "response": {
                "kind": "Resources",
                "metadata": {
                  "name": "guestbook",
                  "namespace": "kui-notebook-3"
                },
                "onclick": {
                  "kind": "open plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
                  "name": "open plugins/plugin-kubectl/tests/data/k8s/application/guestbook/",
                  "namespace": "kubectl get ns kui-notebook-3 -o yaml"
                },
                "defaultMode": "deployed resources",
                "modes": [
                  {
                    "mode": "sources",
                    "label": "Sources",
                    "content": {
                      "apiVersion": "kui-shell/v1",
                      "kind": "TreeResponse",
                      "data": [
                        {
                          "name": "All Resources",
                          "id": "All Resources",
                          "extends": {
                            "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                            "name": [
                              "frontend",
                              "frontend",
                              "redis-master",
                              "redis-master",
                              "redis-slave",
                              "redis-slave"
                            ]
                          },
                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                          "contentType": "yaml",
                          "defaultExpanded": true,
                          "children": [
                            {
                              "id": "Tiers",
                              "name": "Tiers",
                              "hasBadge": true,
                              "defaultExpanded": true,
                              "extends": {
                                "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                                "name": [
                                  "frontend",
                                  "frontend",
                                  "redis-master",
                                  "redis-master",
                                  "redis-slave",
                                  "redis-slave"
                                ]
                              },
                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                              "contentType": "yaml",
                              "children": [
                                {
                                  "id": "Frontend",
                                  "name": "Frontend",
                                  "hasBadge": false,
                                  "defaultExpanded": false,
                                  "extends": {
                                    "kind": ["Deployment", "Service"],
                                    "name": ["frontend", "frontend"]
                                  },
                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                  "contentType": "yaml",
                                  "children": [
                                    {
                                      "id": "Apps",
                                      "name": "Apps",
                                      "hasBadge": true,
                                      "defaultExpanded": true,
                                      "extends": {
                                        "kind": ["Deployment", "Service"],
                                        "name": ["frontend", "frontend"]
                                      },
                                      "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                      "contentType": "yaml",
                                      "children": [
                                        {
                                          "id": "Guestbook",
                                          "name": "Guestbook",
                                          "hasBadge": false,
                                          "defaultExpanded": false,
                                          "extends": {
                                            "kind": ["Deployment", "Service"],
                                            "name": ["frontend", "frontend"]
                                          },
                                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                          "contentType": "yaml",
                                          "children": [
                                            {
                                              "id": "Deployment",
                                              "name": "Deployment",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Deployment"],
                                                "name": ["frontend"]
                                              },
                                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Frontend2",
                                                  "name": "Frontend",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["frontend"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\nspec:\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - name: php-redis\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 80\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            },
                                            {
                                              "id": "Service",
                                              "name": "Service",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Service"],
                                                "name": ["frontend"]
                                              },
                                              "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Frontend3",
                                                  "name": "Frontend",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["frontend"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: guestbook\n    tier: frontend\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n  selector:\n    app: guestbook\n    tier: frontend\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "id": "Backend",
                                  "name": "Backend",
                                  "hasBadge": false,
                                  "defaultExpanded": false,
                                  "extends": {
                                    "kind": ["Deployment", "Service", "Deployment", "Service"],
                                    "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                  },
                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                  "contentType": "yaml",
                                  "children": [
                                    {
                                      "id": "Apps2",
                                      "name": "Apps",
                                      "hasBadge": true,
                                      "defaultExpanded": true,
                                      "extends": {
                                        "kind": ["Deployment", "Service", "Deployment", "Service"],
                                        "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                      },
                                      "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                      "contentType": "yaml",
                                      "children": [
                                        {
                                          "id": "Redis",
                                          "name": "Redis",
                                          "hasBadge": false,
                                          "defaultExpanded": false,
                                          "extends": {
                                            "kind": ["Deployment", "Service", "Deployment", "Service"],
                                            "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                          },
                                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                          "contentType": "yaml",
                                          "children": [
                                            {
                                              "id": "Deployment2",
                                              "name": "Deployment",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Deployment", "Deployment"],
                                                "name": ["redis-master", "redis-slave"]
                                              },
                                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Redis-Master",
                                                  "name": "Redis-Master",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["redis-master"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - name: master\n          image: 'k8s.gcr.io/redis:e2e'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          ports:\n            - containerPort: 6379\n",
                                                  "contentType": "yaml"
                                                },
                                                {
                                                  "id": "Redis-Slave",
                                                  "name": "Redis-Slave",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["redis-slave"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - name: slave\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          ports:\n            - containerPort: 6379\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            },
                                            {
                                              "id": "Service2",
                                              "name": "Service",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Service", "Service"],
                                                "name": ["redis-master", "redis-slave"]
                                              },
                                              "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                              "contentType": "yaml",
                                              "children": [
                                                {
                                                  "id": "Redis-Master2",
                                                  "name": "Redis-Master",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["redis-master"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-master\n  labels:\n    app: redis\n    role: master\n    tier: backend\nspec:\n  ports:\n    - name: redis\n      port: 6379\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n",
                                                  "contentType": "yaml"
                                                },
                                                {
                                                  "id": "Redis-Slave2",
                                                  "name": "Redis-Slave",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["redis-slave"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  name: redis-slave\n  labels:\n    app: redis\n    role: slave\n    tier: backend\nspec:\n  ports:\n    - port: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n",
                                                  "contentType": "yaml"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "toolbarText": {
                        "type": "info",
                        "text": "Showing source code. Status: **Live**"
                      }
                    }
                  },
                  {
                    "mode": "deployed resources",
                    "label": "Deployed Resources",
                    "content": {
                      "apiVersion": "kui-shell/v1",
                      "kind": "TreeResponse",
                      "data": [
                        {
                          "name": "All Resources",
                          "id": "All Resources",
                          "extends": {
                            "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                            "name": [
                              "frontend",
                              "frontend",
                              "redis-master",
                              "redis-master",
                              "redis-slave",
                              "redis-slave"
                            ]
                          },
                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                          "contentType": "yaml",
                          "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                          "eventArgs": {
                            "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                            "schema": {
                              "nCol": 5,
                              "timestampCol": 0,
                              "nameCol": 1,
                              "messageCol": 2,
                              "apiVersionCol": 3,
                              "kindCol": 4
                            }
                          },
                          "defaultExpanded": true,
                          "children": [
                            {
                              "id": "Tiers",
                              "name": "Tiers",
                              "hasBadge": true,
                              "defaultExpanded": true,
                              "extends": {
                                "kind": ["Deployment", "Service", "Deployment", "Service", "Deployment", "Service"],
                                "name": [
                                  "frontend",
                                  "frontend",
                                  "redis-master",
                                  "redis-master",
                                  "redis-slave",
                                  "redis-slave"
                                ]
                              },
                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                              "contentType": "yaml",
                              "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                              "eventArgs": {
                                "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                "schema": {
                                  "nCol": 5,
                                  "timestampCol": 0,
                                  "nameCol": 1,
                                  "messageCol": 2,
                                  "apiVersionCol": 3,
                                  "kindCol": 4
                                }
                              },
                              "children": [
                                {
                                  "id": "Frontend",
                                  "name": "Frontend",
                                  "hasBadge": false,
                                  "defaultExpanded": false,
                                  "extends": {
                                    "kind": ["Deployment", "Service"],
                                    "name": ["frontend", "frontend"]
                                  },
                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                  "contentType": "yaml",
                                  "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                  "eventArgs": {
                                    "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                    "schema": {
                                      "nCol": 5,
                                      "timestampCol": 0,
                                      "nameCol": 1,
                                      "messageCol": 2,
                                      "apiVersionCol": 3,
                                      "kindCol": 4
                                    }
                                  },
                                  "children": [
                                    {
                                      "id": "Apps",
                                      "name": "Apps",
                                      "hasBadge": true,
                                      "defaultExpanded": true,
                                      "extends": {
                                        "kind": ["Deployment", "Service"],
                                        "name": ["frontend", "frontend"]
                                      },
                                      "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                      "contentType": "yaml",
                                      "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                      "eventArgs": {
                                        "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                        "schema": {
                                          "nCol": 5,
                                          "timestampCol": 0,
                                          "nameCol": 1,
                                          "messageCol": 2,
                                          "apiVersionCol": 3,
                                          "kindCol": 4
                                        }
                                      },
                                      "children": [
                                        {
                                          "id": "Guestbook",
                                          "name": "Guestbook",
                                          "hasBadge": false,
                                          "defaultExpanded": false,
                                          "extends": {
                                            "kind": ["Deployment", "Service"],
                                            "name": ["frontend", "frontend"]
                                          },
                                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                          "contentType": "yaml",
                                          "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                          "eventArgs": {
                                            "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                            "schema": {
                                              "nCol": 5,
                                              "timestampCol": 0,
                                              "nameCol": 1,
                                              "messageCol": 2,
                                              "apiVersionCol": 3,
                                              "kindCol": 4
                                            }
                                          },
                                          "children": [
                                            {
                                              "id": "Deployment",
                                              "name": "Deployment",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Deployment"],
                                                "name": ["frontend"]
                                              },
                                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n",
                                              "contentType": "yaml",
                                              "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n",
                                              "eventArgs": {
                                                "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                "schema": {
                                                  "nCol": 5,
                                                  "timestampCol": 0,
                                                  "nameCol": 1,
                                                  "messageCol": 2,
                                                  "apiVersionCol": 3,
                                                  "kindCol": 4
                                                }
                                              },
                                              "children": [
                                                {
                                                  "id": "Frontend2",
                                                  "name": "Frontend",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["frontend"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n",
                                                  "contentType": "yaml",
                                                  "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google-samples/gb-frontend:v4\",\"name\":\"php-redis\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: guestbook\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"php-redis\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":80,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14843'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/frontend\n  uid: 2bf18250-0899-4227-83b2-bb1270e3ffbf\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 3\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: guestbook\n      tier: frontend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: guestbook\n        tier: frontend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google-samples/gb-frontend:v4'\n          imagePullPolicy: IfNotPresent\n          name: php-redis\n          ports:\n            - containerPort: 80\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 3\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"frontend-6c6d6dfd4d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 3\n  replicas: 3\n  updatedReplicas: 3\n",
                                                  "eventArgs": {
                                                    "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                    "schema": {
                                                      "nCol": 5,
                                                      "timestampCol": 0,
                                                      "nameCol": 1,
                                                      "messageCol": 2,
                                                      "apiVersionCol": 3,
                                                      "kindCol": 4
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "id": "Service",
                                              "name": "Service",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Service"],
                                                "name": ["frontend"]
                                              },
                                              "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                              "contentType": "yaml",
                                              "modifiedContent": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                              "eventArgs": {
                                                "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                "schema": {
                                                  "nCol": 5,
                                                  "timestampCol": 0,
                                                  "nameCol": 1,
                                                  "messageCol": 2,
                                                  "apiVersionCol": 3,
                                                  "kindCol": 4
                                                }
                                              },
                                              "children": [
                                                {
                                                  "id": "Frontend3",
                                                  "name": "Frontend",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["frontend"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                                  "contentType": "yaml",
                                                  "modifiedContent": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"name\":\"frontend\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":80}],\"selector\":{\"app\":\"guestbook\",\"tier\":\"frontend\"},\"type\":\"NodePort\"}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: guestbook\n    tier: frontend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n        'f:spec':\n          'f:externalTrafficPolicy': {}\n          'f:ports':\n            .: {}\n            'k:{\"port\":80,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: frontend\n  namespace: kui-notebook-3\n  resourceVersion: '14746'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/frontend\n  uid: bcd1cec0-2825-484f-b37e-bf70c065997c\nspec:\n  clusterIP: 10.107.205.100\n  externalTrafficPolicy: Cluster\n  ports:\n    - nodePort: 32639\n      port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: guestbook\n    tier: frontend\n  sessionAffinity: None\n  type: NodePort\nstatus:\n  loadBalancer: {}\n",
                                                  "eventArgs": {
                                                    "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                    "schema": {
                                                      "nCol": 5,
                                                      "timestampCol": 0,
                                                      "nameCol": 1,
                                                      "messageCol": 2,
                                                      "apiVersionCol": 3,
                                                      "kindCol": 4
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "id": "Backend",
                                  "name": "Backend",
                                  "hasBadge": false,
                                  "defaultExpanded": false,
                                  "extends": {
                                    "kind": ["Deployment", "Service", "Deployment", "Service"],
                                    "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                  },
                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                  "contentType": "yaml",
                                  "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                  "eventArgs": {
                                    "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                    "schema": {
                                      "nCol": 5,
                                      "timestampCol": 0,
                                      "nameCol": 1,
                                      "messageCol": 2,
                                      "apiVersionCol": 3,
                                      "kindCol": 4
                                    }
                                  },
                                  "children": [
                                    {
                                      "id": "Apps2",
                                      "name": "Apps",
                                      "hasBadge": true,
                                      "defaultExpanded": true,
                                      "extends": {
                                        "kind": ["Deployment", "Service", "Deployment", "Service"],
                                        "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                      },
                                      "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                      "contentType": "yaml",
                                      "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                      "eventArgs": {
                                        "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                        "schema": {
                                          "nCol": 5,
                                          "timestampCol": 0,
                                          "nameCol": 1,
                                          "messageCol": 2,
                                          "apiVersionCol": 3,
                                          "kindCol": 4
                                        }
                                      },
                                      "children": [
                                        {
                                          "id": "Redis",
                                          "name": "Redis",
                                          "hasBadge": false,
                                          "defaultExpanded": false,
                                          "extends": {
                                            "kind": ["Deployment", "Service", "Deployment", "Service"],
                                            "name": ["redis-master", "redis-master", "redis-slave", "redis-slave"]
                                          },
                                          "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                          "contentType": "yaml",
                                          "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                          "eventArgs": {
                                            "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                            "schema": {
                                              "nCol": 5,
                                              "timestampCol": 0,
                                              "nameCol": 1,
                                              "messageCol": 2,
                                              "apiVersionCol": 3,
                                              "kindCol": 4
                                            }
                                          },
                                          "children": [
                                            {
                                              "id": "Deployment2",
                                              "name": "Deployment",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Deployment", "Deployment"],
                                                "name": ["redis-master", "redis-slave"]
                                              },
                                              "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n",
                                              "contentType": "yaml",
                                              "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n",
                                              "eventArgs": {
                                                "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                "schema": {
                                                  "nCol": 5,
                                                  "timestampCol": 0,
                                                  "nameCol": 1,
                                                  "messageCol": 2,
                                                  "apiVersionCol": 3,
                                                  "kindCol": 4
                                                }
                                              },
                                              "children": [
                                                {
                                                  "id": "Redis-Master",
                                                  "name": "Redis-Master",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["redis-master"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n",
                                                  "contentType": "yaml",
                                                  "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"image\":\"k8s.gcr.io/redis:e2e\",\"name\":\"master\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"master\"}':\n                  .: {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14848'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-master\n  uid: fc5c85b9-55ba-40d5-8e1c-e56478de9a6d\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: master\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: master\n        tier: backend\n    spec:\n      containers:\n        - image: 'k8s.gcr.io/redis:e2e'\n          imagePullPolicy: IfNotPresent\n          name: master\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 1\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-master-f46ff57fd\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 1\n  replicas: 1\n  updatedReplicas: 1\n",
                                                  "eventArgs": {
                                                    "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                    "schema": {
                                                      "nCol": 5,
                                                      "timestampCol": 0,
                                                      "nameCol": 1,
                                                      "messageCol": 2,
                                                      "apiVersionCol": 3,
                                                      "kindCol": 4
                                                    }
                                                  }
                                                },
                                                {
                                                  "id": "Redis-Slave",
                                                  "name": "Redis-Slave",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Deployment"],
                                                    "name": ["redis-slave"]
                                                  },
                                                  "content": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n",
                                                  "contentType": "yaml",
                                                  "modifiedContent": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"GET_HOSTS_FROM\",\"value\":\"dns\"}],\"image\":\"gcr.io/google_samples/gb-redisslave:v3\",\"name\":\"slave\",\"ports\":[{\"containerPort\":6379}],\"resources\":{\"requests\":{\"cpu\":\"100m\",\"memory\":\"100Mi\"}}}]}}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  generation: 1\n  labels:\n    app: redis\n  managedFields:\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n        'f:spec':\n          'f:progressDeadlineSeconds': {}\n          'f:replicas': {}\n          'f:revisionHistoryLimit': {}\n          'f:selector':\n            'f:matchLabels':\n              .: {}\n              'f:app': {}\n              'f:role': {}\n              'f:tier': {}\n          'f:strategy':\n            'f:rollingUpdate':\n              .: {}\n              'f:maxSurge': {}\n              'f:maxUnavailable': {}\n            'f:type': {}\n          'f:template':\n            'f:metadata':\n              'f:labels':\n                .: {}\n                'f:app': {}\n                'f:role': {}\n                'f:tier': {}\n            'f:spec':\n              'f:containers':\n                'k:{\"name\":\"slave\"}':\n                  .: {}\n                  'f:env':\n                    .: {}\n                    'k:{\"name\":\"GET_HOSTS_FROM\"}':\n                      .: {}\n                      'f:name': {}\n                      'f:value': {}\n                  'f:image': {}\n                  'f:imagePullPolicy': {}\n                  'f:name': {}\n                  'f:ports':\n                    .: {}\n                    'k:{\"containerPort\":6379,\"protocol\":\"TCP\"}':\n                      .: {}\n                      'f:containerPort': {}\n                      'f:protocol': {}\n                  'f:resources':\n                    .: {}\n                    'f:requests':\n                      .: {}\n                      'f:cpu': {}\n                      'f:memory': {}\n                  'f:terminationMessagePath': {}\n                  'f:terminationMessagePolicy': {}\n              'f:dnsPolicy': {}\n              'f:restartPolicy': {}\n              'f:schedulerName': {}\n              'f:securityContext': {}\n              'f:terminationGracePeriodSeconds': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n    - apiVersion: apps/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            'f:deployment.kubernetes.io/revision': {}\n        'f:status':\n          'f:availableReplicas': {}\n          'f:conditions':\n            .: {}\n            'k:{\"type\":\"Available\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n            'k:{\"type\":\"Progressing\"}':\n              .: {}\n              'f:lastTransitionTime': {}\n              'f:lastUpdateTime': {}\n              'f:message': {}\n              'f:reason': {}\n              'f:status': {}\n              'f:type': {}\n          'f:observedGeneration': {}\n          'f:readyReplicas': {}\n          'f:replicas': {}\n          'f:updatedReplicas': {}\n      manager: kube-controller-manager\n      operation: Update\n      time: '2020-11-23T23:21:07Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14832'\n  selfLink: /apis/apps/v1/namespaces/kui-notebook-3/deployments/redis-slave\n  uid: 1e248ced-2eab-405a-8925-b57b7d62745c\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: redis\n      role: slave\n      tier: backend\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: redis\n        role: slave\n        tier: backend\n    spec:\n      containers:\n        - env:\n            - name: GET_HOSTS_FROM\n              value: dns\n          image: 'gcr.io/google_samples/gb-redisslave:v3'\n          imagePullPolicy: IfNotPresent\n          name: slave\n          ports:\n            - containerPort: 6379\n              protocol: TCP\n          resources:\n            requests:\n              cpu: 100m\n              memory: 100Mi\n          terminationMessagePath: /dev/termination-log\n          terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\nstatus:\n  availableReplicas: 2\n  conditions:\n    - lastTransitionTime: '2020-11-23T23:21:07Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: Deployment has minimum availability.\n      reason: MinimumReplicasAvailable\n      status: 'True'\n      type: Available\n    - lastTransitionTime: '2020-11-23T23:20:58Z'\n      lastUpdateTime: '2020-11-23T23:21:07Z'\n      message: ReplicaSet \"redis-slave-bbc7f655d\" has successfully progressed.\n      reason: NewReplicaSetAvailable\n      status: 'True'\n      type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n",
                                                  "eventArgs": {
                                                    "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                    "schema": {
                                                      "nCol": 5,
                                                      "timestampCol": 0,
                                                      "nameCol": 1,
                                                      "messageCol": 2,
                                                      "apiVersionCol": 3,
                                                      "kindCol": 4
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            {
                                              "id": "Service2",
                                              "name": "Service",
                                              "hasBadge": true,
                                              "defaultExpanded": true,
                                              "extends": {
                                                "kind": ["Service", "Service"],
                                                "name": ["redis-master", "redis-slave"]
                                              },
                                              "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                              "contentType": "yaml",
                                              "modifiedContent": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                              "eventArgs": {
                                                "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                "schema": {
                                                  "nCol": 5,
                                                  "timestampCol": 0,
                                                  "nameCol": 1,
                                                  "messageCol": 2,
                                                  "apiVersionCol": 3,
                                                  "kindCol": 4
                                                }
                                              },
                                              "children": [
                                                {
                                                  "id": "Redis-Master2",
                                                  "name": "Redis-Master",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["redis-master"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                  "contentType": "yaml",
                                                  "modifiedContent": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"},\"name\":\"redis-master\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"name\":\"redis\",\"port\":6379,\"targetPort\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"master\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: master\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:name': {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-master\n  namespace: kui-notebook-3\n  resourceVersion: '14767'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-master\n  uid: c3a91c5a-9bd9-4f99-8104-de3b69cd754d\nspec:\n  clusterIP: 10.111.77.177\n  ports:\n    - name: redis\n      port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: master\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                  "eventArgs": {
                                                    "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                    "schema": {
                                                      "nCol": 5,
                                                      "timestampCol": 0,
                                                      "nameCol": 1,
                                                      "messageCol": 2,
                                                      "apiVersionCol": 3,
                                                      "kindCol": 4
                                                    }
                                                  }
                                                },
                                                {
                                                  "id": "Redis-Slave2",
                                                  "name": "Redis-Slave",
                                                  "hasBadge": false,
                                                  "defaultExpanded": false,
                                                  "extends": {
                                                    "kind": ["Service"],
                                                    "name": ["redis-slave"]
                                                  },
                                                  "content": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                  "contentType": "yaml",
                                                  "modifiedContent": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: >\n      {\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"},\"name\":\"redis-slave\",\"namespace\":\"kui-notebook-3\"},\"spec\":{\"ports\":[{\"port\":6379}],\"selector\":{\"app\":\"redis\",\"role\":\"slave\",\"tier\":\"backend\"}}}\n  creationTimestamp: '2020-11-23T23:20:58Z'\n  labels:\n    app: redis\n    role: slave\n    tier: backend\n  managedFields:\n    - apiVersion: v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:annotations':\n            .: {}\n            'f:kubectl.kubernetes.io/last-applied-configuration': {}\n          'f:labels':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n        'f:spec':\n          'f:ports':\n            .: {}\n            'k:{\"port\":6379,\"protocol\":\"TCP\"}':\n              .: {}\n              'f:port': {}\n              'f:protocol': {}\n              'f:targetPort': {}\n          'f:selector':\n            .: {}\n            'f:app': {}\n            'f:role': {}\n            'f:tier': {}\n          'f:sessionAffinity': {}\n          'f:type': {}\n      manager: kubectl-client-side-apply\n      operation: Update\n      time: '2020-11-23T23:20:58Z'\n  name: redis-slave\n  namespace: kui-notebook-3\n  resourceVersion: '14784'\n  selfLink: /api/v1/namespaces/kui-notebook-3/services/redis-slave\n  uid: 758ef46f-1fde-433c-b396-298cbdef2b03\nspec:\n  clusterIP: 10.101.249.119\n  ports:\n    - port: 6379\n      protocol: TCP\n      targetPort: 6379\n  selector:\n    app: redis\n    role: slave\n    tier: backend\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}\n",
                                                  "eventArgs": {
                                                    "command": "kubectl get events -w -n kui-notebook-3 --no-headers -o jsonpath='{.lastTimestamp}{\"|\"}{.involvedObject.name}{\"|\"}{.message}{\"|\"}{.involvedObject.apiVersion}{\"|\"}{.involvedObject.kind}{\"|\\n\"}' ",
                                                    "schema": {
                                                      "nCol": 5,
                                                      "timestampCol": 0,
                                                      "nameCol": 1,
                                                      "messageCol": 2,
                                                      "apiVersionCol": 3,
                                                      "kindCol": 4
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "toolbarText": {
                        "type": "info",
                        "text": "Showing deployed resources"
                      },
                      "toolbarButtons": [
                        {
                          "mode": "apply",
                          "label": "Apply Changes",
                          "kind": "drilldown",
                          "command": "kubectl apply -n kui-notebook-3 -f plugins/plugin-kubectl/tests/data/k8s/application/guestbook/"
                        }
                      ]
                    }
                  }
                ]
              },
              "responseType": "MultiModalResponse",
              "historyIdx": 254
            },
            "isExperimental": false,
            "isReplay": true,
            "execUUID": "0bcdf427-5e8c-43b0-951f-24f739987fae",
            "startTime": 1606173714573,
            "outputOnly": false,
            "state": "valid-response"
          }
        ]
      }
    ]
  }
}
